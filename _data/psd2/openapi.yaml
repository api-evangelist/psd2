swagger: '2.0'
info:
  title: Open Bank Project API
  description: An Open Source API for Banks. (c) TESOBE Ltd. 2011 - 2016. Licensed under the AGPL and commercial licences.
  contact:
    name: TESOBE Ltd. / Open Bank Project
    url: 'https://openbankproject.com'
    email: contact@tesobe.com
  version: v2_0_0
host: apisandbox.openbankproject.com
basePath: /
schemes:
  - http
  - https
securityDefinitions:
  directLogin:
    type: apiKey
    description: 'https://github.com/OpenBankProject/OBP-API/wiki/Direct-Login'
    in: header
    name: Authorization
  gatewayLogin:
    type: apiKey
    description: 'https://github.com/OpenBankProject/OBP-API/wiki/Gateway-Login'
    in: header
    name: Authorization
security:
  - directLogin: []
    gatewayLogin: []
paths:
  /obp/v2.0.0/accounts:
    get:
      tags:
        - Account
        - PrivateData
        - PublicData
      summary: Get all Accounts at all Banks.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get all accounts at all banks the User has access to (Authenticated + Anonymous access). Returns the list of accounts at that the user has access to at all banks. For each account the API returns the account ID and the available views.</p><p>If the user is not authenticated via OAuth, the list will contain only the accounts providing public views. If the user is authenticated, the list will contain Private accounts to which the user has access, in addition to all public accounts.</p><p>Authentication is Optional</p>'
      operationId: v2_0_0-allAccountsAllBanks
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BasicAccountsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
  /obp/v2.0.0/accounts/public:
    get:
      tags:
        - Account
        - PublicData
      summary: Get Public Accounts at all Banks.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Get public accounts at all banks (Anonymous access). Returns accounts that contain at least one public view (a view where is_public is true) For each account the API returns the ID and the available views.</p><p>Authentication is Optional</p>
      operationId: v2_0_0-publicAccountsAllBanks
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BasicAccountsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v2.0.0/banks:
    get:
      tags:
        - Bank
      summary: Get Banks
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get banks on this API instance Returns a list of banks supported on this server:</p><ul>  <li>ID used as parameter in URLs</li>  <li>Short and full name of bank</li>  <li>Logo URL</li>  <li>Website</li></ul>'
      operationId: v1_2_1-getBanks
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BanksJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
  '/obp/v2.0.0/banks/{BANK_ID}':
    get:
      tags:
        - Bank
      summary: Get Bank
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get the bank specified by BANK_ID Returns information about a single bank specified by BANK_ID including:</p><ul>  <li>Short and full name of bank</li>  <li>Logo URL</li>  <li>Website</li></ul>'
      operationId: v1_2_1-bankById
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BankJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts':
    get:
      tags:
        - Account
        - PrivateData
        - PublicData
      summary: Get Accounts at Bank (inc. Public).
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get accounts at one bank that the user has access to (Authenticated + Anonymous access). Returns the list of accounts at BANK_ID that the user has access to. For each account the API returns the account ID and the available views.</p><p>If the user is not authenticated, the list will contain only the accounts providing public views. Authentication is Optional</p>'
      operationId: v2_0_0-allAccountsAtOneBank
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BasicAccountsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}':
    post:
      tags:
        - Account
        - CounterpartyMetaData
      summary: Update Account Label.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Update the label for the account. The label is how the account is known to the account owner e.g. 'My savings account' </p>
      operationId: v1_2_1-updateAccountLabel
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/UpdateAccountJSON'
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorInvalidJsonFormat'
    put:
      tags:
        - Account
      summary: Create Account
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Create Account at bank specified by BANK_ID with Id specified by ACCOUNT_ID.</p><p>The User can create an Account for themself or an Account for another User if they have CanCreateAccount role.</p><p>If USER_ID is not specified the account will be owned by the logged in User.</p><p>Note: The Amount must be zero.</p>'
      operationId: v2_0_0-createAccount
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/CreateAccountJSON'
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CoreAccountJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/account':
    get:
      tags:
        - Account
      summary: Get Account by Id (Full)
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Information returned about an account specified by ACCOUNT_ID as moderated by the view (VIEW_ID):</p><ul>  <li>Number</li>  <li>Owners</li>  <li>Type</li>  <li>Balance</li>  <li>IBAN</li>  <li>Available views (sorted by short_name)</li></ul><p>More details about the data moderation by the view <a href="#1_2_1-getViewsForBankAccount">here</a>.</p><p>PSD2 Context: PSD2 requires customers to have access to their account information via third party applications. This call provides balance and other account information via delegated authenticaiton using OAuth.</p><p>OAuth authentication is required if the ''is_public'' field in view (VIEW_ID) is not set to <code>true</code>.</p>'
      operationId: v2_0_0-accountById
      parameters:
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModeratedAccountJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts':
    get:
      tags:
        - Counterparty
        - Account
      summary: Get Other Accounts of one Account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Returns data about all the other accounts that have shared at least one transaction with the ACCOUNT_ID at BANK_ID. Authentication is Optional Authentication is required if the view VIEW_ID is not public.</p>
      operationId: v1_2_1-getOtherAccountsForBankAccount
      parameters:
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OtherAccountsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}':
    get:
      tags:
        - Counterparty
        - Account
      summary: Get Other Account by Id.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID at BANK_ID. Authentication is Optional Authentication is required if the view is not public.</p>
      operationId: v1_2_1-getOtherAccountByIdForBankAccount
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OtherAccountJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata':
    get:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Get Other Account Metadata.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Get metadata of one other account. Returns only the metadata about one other bank account (OTHER_ACCOUNT_ID) that had shared at least one transaction with ACCOUNT_ID at BANK_ID.</p><p>Authentication via OAuth is required if the view is not public.</p>
      operationId: v1_2_1-getOtherAccountMetadata
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OtherAccountMetadataJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/corporate_location':
    delete:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Delete Counterparty Corporate Location.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Delete corporate location of other bank account. Delete the geolocation of the counterparty's registered address</p>
      operationId: v1_2_1-deleteCounterpartyCorporateLocation
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Add Corporate Location to Counterparty
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Add the geolocation of the counterparty's registered address</p>
      operationId: v1_2_1-addCounterpartyCorporateLocation
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/CorporateLocationJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Update Counterparty Corporate Location
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Update the geolocation of the counterparty's registered address</p>
      operationId: v1_2_1-updateCounterpartyCorporateLocation
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/CorporateLocationJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/image_url':
    delete:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Delete Counterparty Image URL
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Delete image url of other bank account.</p>
      operationId: v1_2_1-deleteCounterpartyImageUrl
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
    post:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Add image url to other bank account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Add a url that points to the logo of the counterparty</p>
      operationId: v1_2_1-addCounterpartyImageUrl
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/ImageUrlJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Update Counterparty Image Url
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Update the url that points to the logo of the counterparty</p>
      operationId: v1_2_1-updateCounterpartyImageUrl
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/ImageUrlJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/more_info':
    delete:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Delete more info of other bank account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: ''
      operationId: v1_2_1-deleteCounterpartyMoreInfo
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Add Counterparty More Info
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Add a description of the counter party from the perpestive of the account e.g. My dentist.</p>
      operationId: v1_2_1-addCounterpartyMoreInfo
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/MoreInfoJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Update Counterparty More Info
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Update the more info description of the counter party from the perpestive of the account e.g. My dentist.</p>
      operationId: v1_2_1-updateCounterpartyMoreInfo
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/MoreInfoJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/open_corporates_url':
    delete:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Delete Counterparty Open Corporates URL
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Delete open corporate url of other bank account.</p>
      operationId: v1_2_1-deleteCounterpartyOpenCorporatesUrl
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Add Open Corporates URL to Counterparty
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Add open corporates url to other bank account.</p>
      operationId: v1_2_1-addCounterpartyOpenCorporatesUrl
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/OpenCorporateUrlJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    put:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Update Open Corporates Url of Counterparty
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Update open corporate url of other bank account.</p>
      operationId: v1_2_1-updateCounterpartyOpenCorporatesUrl
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/OpenCorporateUrlJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/physical_location':
    delete:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Delete Counterparty Physical Location.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Delete physical location of other bank account.</p>
      operationId: v1_2_1-deleteCounterpartyPhysicalLocation
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Add physical location to other bank account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Add geocoordinates of the counterparty's main location</p>
      operationId: v1_2_1-addCounterpartyPhysicalLocation
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PhysicalLocationJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Update Counterparty Physical Location
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Update geocoordinates of the counterparty's main location</p>
      operationId: v1_2_1-updateCounterpartyPhysicalLocation
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PhysicalLocationJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/metadata/url':
    delete:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Delete url of other bank account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: ''
      operationId: v1_2_1-deleteCounterpartyUrl
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Add url to other bank account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>A url which represents the counterparty (home page url etc.)</p>
      operationId: v1_2_1-addCounterpartyUrl
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/UrlJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Update url of other bank account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>A url which represents the counterparty (home page url etc.)</p>
      operationId: v1_2_1-updateCounterpartyUrl
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/UrlJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/private_alias':
    delete:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Delete Counterparty Private Alias
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Deletes the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional Authentication is required if the view is not public.</p>
      operationId: v1_2_1-deleteCounterpartyPrivateAlias
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    get:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Get Other Account Private Alias
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Returns the private alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional Authentication is required if the view is not public.</p>
      operationId: v1_2_1-getOtherAccountPrivateAlias
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AliasJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Create Other Account Private Alias
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Creates a private alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional Authentication is required if the view is not public.</p>
      operationId: v1_2_1-addOtherAccountPrivateAlias
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/AliasJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Update Counterparty Private Alias
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Updates the private alias of the counterparty (AKA other account) OTHER_ACCOUNT_ID.</p><p>Authentication is Optional Authentication is required if the view is not public.</p>
      operationId: v1_2_1-updateCounterpartyPrivateAlias
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/AliasJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}/public_alias':
    delete:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Delete Counterparty Public Alias
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Deletes the public alias of the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional Authentication is required if the view is not public.</p>
      operationId: v1_2_1-deleteCounterpartyPublicAlias
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    get:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Get public alias of other bank account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Returns the public alias of the other account OTHER_ACCOUNT_ID. Authentication is Optional OAuth authentication is required if the view is not public.</p>
      operationId: v1_2_1-getCounterpartyPublicAlias
      parameters:
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AliasJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    post:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Add public alias to other bank account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Creates the public alias for the other account OTHER_ACCOUNT_ID.</p><p>Authentication is Optional Authentication is required if the view is not public.</p><p>Note: Public aliases are automatically generated for new ''other accounts / counterparties'', so this call should only be used if the public alias was deleted.</p><p>The VIEW_ID parameter should be a view the caller is permitted to access to and that has permission to create public aliases.</p>'
      operationId: v1_2_1-addCounterpartyPublicAlias
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/AliasJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    put:
      tags:
        - CounterpartyMetaData
        - Counterparty
      summary: Update public alias of other bank account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Updates the public alias of the other account / counterparty OTHER_ACCOUNT_ID.</p><p>Authentication is Optional Authentication is required if the view is not public.</p>
      operationId: v1_2_1-updateCounterpartyPublicAlias
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/AliasJSON'
        - in: path
          name: OTHER_ACCOUNT_ID
          description: The other account id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types':
    get:
      tags:
        - TransactionRequest
      summary: Get Transaction Request Types for Account
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns the Transation Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are the ways this API Server can create a Transaction via a Transaction Request (as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)</p><p>A Transaction Request Type internally determines:</p><ul>  <li>the required Transaction Request ''body'' i.e. fields that define the ''what'' and ''to'' of a Transaction Request,</li>  <li>the type of security challenge that may be be raised before the Transaction Request proceeds, and</li>  <li>the threshold of that challenge.</li></ul><p>For instance in a ''SANDBOX_TAN'' Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.</p><p>This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.</p>'
      operationId: v1_4_0-getTransactionRequestTypes
      parameters:
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionRequestTypesJsonV140'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests':
    post:
      tags:
        - TransactionRequest
      summary: Create Transaction Request.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Initiate a Payment via a Transaction Request.</p><p>This is the preferred method to create a payment and supersedes makePayment in 1.2.1.</p><p>PSD2 Context: Third party access access to payments is a core tenent of PSD2.</p><p>This call satisfies that requirement from several perspectives:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call uses delegated authentication (OAuth)</p><p>See <a href="https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py">this python code</a> for a complete example of this flow.</p><p>In sandbox mode, if the amount is less than 100 (any currency), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.| If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>Currently TRANSACTION_REQUEST_TYPE must be set to SANDBOX_TAN</p><p>The following static FX rates are available in sandbox mode:</p><p>{  "XAF":{  "AUD":1.0,  "KRW":1.87975,  "JOD":1.0,  "GBP":0.00131092,  "AED":0.00601555,  "INR":0.110241,  "JPY":0.185328,  "USD":0.00163773,  "EUR":0.00152449  },  "AUD":{  "XAF":762.826,  "KRW":1433.92,  "JOD":1.0,  "AED":4.58882,  "INR":84.095,  "JPY":141.373,  "USD":0.79,  "EUR":0.67  },  "KRW":{  "XAF":0.531986,  "AUD":1.0,  "JOD":1.0,  "GBP":6.97389E-4,  "AED":0.00320019,  "INR":0.0586469,  "JPY":0.0985917,  "USD":8.7125E-4,  "EUR":8.11008E-4  },  "JOD":{  "XAF":1.0,  "AUD":1.0,  "KRW":1.0,  "GBP":1.0,  "AED":1.0,  "INR":1.0,  "JPY":1.0,  "USD":1.0,  "EUR":1.0  },  "GBP":{  "XAF":762.826,  "AUD":1.0,  "KRW":1433.92,  "JOD":1.0,  "AED":4.58882,  "INR":84.095,  "JPY":141.373,  "USD":1.2493,  "EUR":1.16278  },  "AED":{  "XAF":166.236,  "AUD":1.0,  "KRW":312.482,  "GBP":0.217921,  "AED":1.0,  "INR":18.3255,  "JPY":30.8081,  "USD":0.27225,  "EUR":0.253425  },  "INR":{  "XAF":9.07101,  "AUD":1.0,  "KRW":17.0512,  "JOD":1.0,  "GBP":0.0118913,  "AED":0.0545671,  "JPY":1.68111,  "USD":0.0148559,  "EUR":0.0138287  },  "JPY":{  "XAF":5.39585,  "AUD":1.0,  "KRW":10.1428,  "JOD":1.0,  "GBP":0.0070735,  "AED":0.032459,  "INR":0.594846,  "USD":0.00883695,  "EUR":0.00822592  },  "USD":{  "XAF":610.601,  "AUD":1.0,  "KRW":1147.78,  "JOD":1.0,  "GBP":0.800446,  "AED":3.6731,  "INR":67.3135,  "JPY":113.161,  "EUR":0.930886  },  "EUR":{  "XAF":655.957,  "AUD":1.0,  "KRW":1233.03,  "JOD":1.0,  "GBP":0.860011,  "AED":3.94594,  "INR":72.3136,  "JPY":121.567,  "USD":1.07428  } }</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL</p><p>The payee is set in the request body. Money goes into the BANK_ID and ACCOUNT_IDO specified in the request body.</p><p>Authentication is Mandatory</p>'
      operationId: v2_0_0-createTransactionRequest
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/TransactionRequestBodyJsonV200'
        - in: path
          name: TRANSACTION_REQUEST_TYPE
          description: The transaction request type
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge':
    post:
      tags:
        - TransactionRequest
      summary: Answer Transaction Request Challenge.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>In Sandbox mode, any string that can be converted to a positive integer will be accepted as an answer.</p>'
      operationId: v2_0_0-answerTransactionRequestChallenge
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/ChallengeAnswerJSON'
        - in: path
          name: TRANSACTION_REQUEST_ID
          description: The transaction request id
          required: true
          type: string
        - in: path
          name: TRANSACTION_REQUEST_TYPE
          description: The transaction request type
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/TransactionRequestWithChargeJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-requests':
    get:
      tags:
        - TransactionRequest
      summary: Get Transaction Requests.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns transaction requests for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p><p>The VIEW_ID specified must be ''owner'' and the user must have access to this view.</p><p>Version 2.0.0 now returns charge information.</p><p>Transaction Requests serve to initiate transactions that may or may not proceed. They contain information including:</p><ul>  <li>Transaction Request Id</li>  <li>Type</li>  <li>Status (INITIATED, COMPLETED)</li>  <li>Challenge (in order to confirm the request)</li>  <li>From Bank / Account</li>  <li>Body including To Account, Currency, Value, Description and other initiation information. (Could potentialy include a list of future transactions.)</li>  <li>Related Transactions</li></ul><p>PSD2 Context: PSD2 requires transparency of charges to the customer. This endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after. The customer can proceed with the Transaction by answering the security challenge.</p>'
      operationId: v2_0_0-getTransactionRequests
      parameters:
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionRequestWithChargesJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions':
    get:
      tags:
        - Transaction
        - Account
      summary: Get Transactions for Account (Full)
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns transactions list of the account specified by ACCOUNT_ID and <a href="#1_2_1-getViewsForBankAccount">moderated</a> by the view (VIEW_ID).</p><p>Authentication via OAuth is required if the view is not public.</p><p>Possible custom headers for pagination:</p><ul>  <li>obp_sort_by=CRITERIA ==&gt; default value: "completed" field</li>  <li>obp_sort_direction=ASC/DESC ==&gt; default value: DESC</li>  <li>obp_limit=NUMBER ==&gt; default value: 50</li>  <li>obp_offset=NUMBER ==&gt; default value: 0</li>  <li>obp_from_date=DATE =&gt; default value: date of the oldest transaction registered (format below)</li>  <li>obp_to_date=DATE =&gt; default value: date of the newest transaction registered (format below)</li></ul><p><strong>Date format parameter</strong>: "yyyy-MM-dd''T''HH:mm:ss.SSS''Z''" (2014-07-01T00:00:00.000Z) ==&gt; time zone is UTC.</p>'
      operationId: v1_2_1-getTransactionsForBankAccount
      parameters:
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments':
    get:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Get comments.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns the transaction TRANSACTION_ID comments made on a <a href="#1_2_1-getViewsForBankAccount">view</a> (VIEW_ID).</p><p>Authentication via OAuth is required if the view is not public.</p>'
      operationId: v1_2_1-getCommentsForViewOnTransaction
      parameters:
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionCommentsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Add comment.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Posts a comment about a transaction TRANSACTION_ID on a <a href="#1_2_1-getViewsForBankAccount">view</a> VIEW_ID.</p><p>${authenticationRequiredMessage(false)}</p><p>Authentication is required since the comment is linked with the user.</p>'
      operationId: v1_2_1-addCommentForViewOnTransaction
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PostTransactionCommentJSON'
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/TransactionCommentJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/comments/{COMMENT_ID}':
    delete:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Delete comment.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Delete the comment COMMENT_ID about the transaction TRANSACTION_ID made on <a href="#1_2_1-getViewsForBankAccount">view</a>.</p><p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the comment.</p>'
      operationId: v1_2_1-deleteCommentForViewOnTransaction
      parameters:
        - in: path
          name: COMMENT_ID
          description: The comment id
          required: true
          type: string
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images':
    get:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Get images.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns the transaction TRANSACTION_ID images made on a <a href="#1_2_1-getViewsForBankAccount">view</a> (VIEW_ID).  Authentication via OAuth is required if the view is not public.</p>'
      operationId: v1_2_1-getImagesForViewOnTransaction
      parameters:
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionImagesJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Add an image.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Posts an image about a transaction TRANSACTION_ID on a <a href="#1_2_1-getViewsForBankAccount">view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>The image is linked with the user.</p>'
      operationId: v1_2_1-addImageForViewOnTransaction
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PostTransactionImageJSON'
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/TransactionImageJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorInvalidJsonFormat'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/images/{IMAGE_ID}':
    delete:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Delete an image
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Deletes the image IMAGE_ID about the transaction TRANSACTION_ID made on <a href="#1_2_1-getViewsForBankAccount">view</a>.</p><p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the image.</p>'
      operationId: v1_2_1-deleteImageForViewOnTransaction
      parameters:
        - in: path
          name: IMAGE_ID
          description: The image id
          required: true
          type: string
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/narrative':
    delete:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Delete narrative.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Deletes the description of the transaction TRANSACTION_ID.</p><p>Authentication via OAuth is required if the view is not public.</p>
      operationId: v1_2_1-deleteTransactionNarrative
      parameters:
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    get:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Get narrative.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns the account owner description of the transaction <a href="#1_2_1-getViewsForBankAccount">moderated</a> by the view.</p><p>Authentication via OAuth is required if the view is not public.</p>'
      operationId: v1_2_1-getTransactionNarrative
      parameters:
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionNarrativeJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    post:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Add narrative.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Creates a description of the transaction TRANSACTION_ID.</p><p>Note: Unlike other items of metadata, there is only one "narrative" per transaction accross all views. If you set narrative via a view e.g. view-x it will be seen via view-y (as long as view-y has permission to see the narrative).</p><p>Authentication is Optional Authentication is required if the view is not public.</p>'
      operationId: v1_2_1-addTransactionNarrative
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/TransactionNarrativeJSON'
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorInvalidJsonFormat'
    put:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Update narrative.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Updates the description of the transaction TRANSACTION_ID.</p><p>Authentication via OAuth is required if the view is not public.</p>
      operationId: v1_2_1-updateTransactionNarrative
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/TransactionNarrativeJSON'
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorInvalidJsonFormat'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags':
    get:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Get tags.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns the transaction TRANSACTION_ID tags made on a <a href="#1_2_1-getViewsForBankAccount">view</a> (VIEW_ID).  Authentication via OAuth is required if the view is not public.</p>'
      operationId: v1_2_1-getTagsForViewOnTransaction
      parameters:
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionTagJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    post:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Add a tag.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Posts a tag about a transaction TRANSACTION_ID on a <a href="#1_2_1-getViewsForBankAccount">view</a> VIEW_ID.</p><p>Authentication is Mandatory</p><p>Authentication is required as the tag is linked with the user.</p>'
      operationId: v1_2_1-addTagForViewOnTransaction
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PostTransactionTagJSON'
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/TransactionTagJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/tags/{TAG_ID}':
    delete:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Delete a tag.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Deletes the tag TAG_ID about the transaction TRANSACTION_ID made on <a href="#1_2_1-getViewsForBankAccount">view</a>.</p><p>Authentication via OAuth is required. The user must either have owner privileges for this account, or must be the user that posted the tag.</p>'
      operationId: v1_2_1-deleteTagForViewOnTransaction
      parameters:
        - in: path
          name: TAG_ID
          description: The tag id
          required: true
          type: string
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/metadata/where':
    delete:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Delete where tag.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Deletes the where tag of the transaction TRANSACTION_ID made on <a href="#1_2_1-getViewsForBankAccount">view</a>.</p><p>Authentication is Mandatory</p><p>The user must either have owner privileges for this account, or must be the user that posted the geo tag.</p>'
      operationId: v1_2_1-deleteWhereTagForViewOnTransaction
      parameters:
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    get:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Get where tag.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns the "where" Geo tag added to the transaction TRANSACTION_ID made on a <a href="#1_2_1-getViewsForBankAccount">view</a> (VIEW_ID). It represents the location where the transaction has been initiated.</p><p>Authentication via OAuth is required if the view is not public.</p>'
      operationId: v1_2_1-getWhereTagForViewOnTransaction
      parameters:
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionWhereJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
    post:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Add where tag.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Creates a "where" Geo tag on a transaction TRANSACTION_ID in a <a href="#1_2_1-getViewsForBankAccount">view</a>.</p><p>Authentication is Mandatory</p><p>The geo tag is linked with the user.</p>'
      operationId: v1_2_1-addWhereTagForViewOnTransaction
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PostTransactionWhereJSON'
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
        - TransactionMetaData
        - Transaction
      summary: Update where tag.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Updates the "where" Geo tag on a transaction TRANSACTION_ID in a <a href="#1_2_1-getViewsForBankAccount">view</a>.</p><p>Authentication is Mandatory</p><p>The geo tag is linked with the user.</p>'
      operationId: v1_2_1-updateWhereTagForViewOnTransaction
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PostTransactionWhereJSON'
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/other_account':
    get:
      tags:
        - Transaction
        - Counterparty
      summary: Get Other Account of Transaction
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get other account of a transaction. Returns details of the other party involved in the transaction, moderated by the <a href="#1_2_1-getViewsForBankAccount">view</a> (VIEW_ID).  Authentication via OAuth is required if the view is not public.</p>'
      operationId: v1_2_1-getOtherAccountForTransaction
      parameters:
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/OtherAccountJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transactions/{TRANSACTION_ID}/transaction':
    get:
      tags:
        - Transaction
        - Account
      summary: Get Transaction by Id.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns one transaction specified by TRANSACTION_ID of the account ACCOUNT_ID and <a href="#1_2_1-getViewsForBankAccount">moderated</a> by the view (VIEW_ID).</p><p>Authentication is Optional Authentication is required if the view is not public.</p>'
      operationId: v1_2_1-getTransactionByIdForBankAccount
      parameters:
        - in: path
          name: TRANSACTION_ID
          description: The transaction id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions':
    get:
      tags:
        - Account
        - User
        - View
        - Entitlement
      summary: Get access.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns the list of the permissions at BANK_ID for account ACCOUNT_ID, with each time a pair composed of the user and the views that he has access to.</p><p>OAuth authentication is required and the user needs to have access to the owner view.</p>'
      operationId: v2_0_0-getPermissionsForBankAccount
      parameters:
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PermissionsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER_ID}/{USER_ID}':
    get:
      tags:
        - Account
        - View
      summary: Get Account access for User.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns the list of the views at BANK_ID for account ACCOUNT_ID that a USER_ID at their provider PROVIDER_ID has access to. All url parameters must be <a href="http://en.wikipedia.org/wiki/Percent-encoding">%-encoded</a>, which is often especially relevant for USER_ID and PROVIDER_ID.</p><p>Authentication is Mandatory</p><p>The user needs to have access to the owner view.</p>'
      operationId: v2_0_0-getPermissionForUserForBankAccount
      parameters:
        - in: path
          name: PROVIDER_ID
          description: The provider id
          required: true
          type: string
        - in: path
          name: USER_ID
          description: The user id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ViewsJSONV121'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER_ID}/{USER_ID}/views':
    delete:
      tags:
        - Account
        - User
        - View
        - OwnerViewRequired
      summary: Revoke access to all Views on Account
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Revokes the user USER_ID at their provider PROVIDER_ID access to all the views at BANK_ID for account ACCOUNT_ID.</p><p>OAuth authentication is required and the user needs to have access to the owner view.</p>
      operationId: v1_2_1-removePermissionForUserForBankAccountForAllViews
      parameters:
        - in: path
          name: PROVIDER_ID
          description: The provider id
          required: true
          type: string
        - in: path
          name: USER_ID
          description: The user id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - Account
        - User
        - View
        - OwnerViewRequired
      summary: Grant User access to a list of views.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Grants the user USER_ID at their provider PROVIDER_ID access to a list of views at BANK_ID for account ACCOUNT_ID.</p><p>All url parameters must be <a href="http://en.wikipedia.org/wiki/Percent-encoding">%-encoded</a>, which is often especially relevant for USER_ID and PROVIDER_ID.</p><p>Authentication is Mandatory</p><p>The User needs to have access to the owner view.</p>'
      operationId: v1_2_1-addPermissionForUserForBankAccountForMultipleViews
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/ViewIdsJson'
        - in: path
          name: PROVIDER_ID
          description: The provider id
          required: true
          type: string
        - in: path
          name: USER_ID
          description: The user id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/ViewsJSONV121'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/permissions/{PROVIDER_ID}/{USER_ID}/views/{VIEW_ID}':
    delete:
      tags:
        - Account
        - User
        - View
        - Entitlement
        - OwnerViewRequired
      summary: Revoke access to one View.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Revokes the user USER_ID at their provider PROVIDER_ID access to the view VIEW_ID at BANK_ID for account ACCOUNT_ID.</p><p>Revoking a user access to a public view will return an error message.</p><p>OAuth authentication is required and the user needs to have access to the owner view.</p>
      operationId: v1_2_1-removePermissionForUserForBankAccountForOneView
      parameters:
        - in: path
          name: PROVIDER_ID
          description: The provider id
          required: true
          type: string
        - in: path
          name: USER_ID
          description: The user id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - Account
        - User
        - View
        - OwnerViewRequired
      summary: Grant User access to View.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Grants the user USER_ID at their provider PROVIDER_ID access to the view VIEW_ID at BANK_ID for account ACCOUNT_ID. All url parameters must be <a href="http://en.wikipedia.org/wiki/Percent-encoding">%-encoded</a>, which is often especially relevant for USER_ID and PROVIDER_ID.</p><p>OAuth authentication is required and the user needs to have access to the owner view.</p><p>Granting access to a public view will return an error message, as the user already has access.</p>'
      operationId: v1_2_1-addPermissionForUserForBankAccountForOneView
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/EmptyClassJson'
        - in: path
          name: PROVIDER_ID
          description: The provider id
          required: true
          type: string
        - in: path
          name: USER_ID
          description: The user id
          required: true
          type: string
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/ViewJSONV121'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views':
    get:
      tags:
        - Account
        - View
      summary: Get Views for Account.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<h1>Views</h1><p>Views in Open Bank Project provide a mechanism for fine grained access control and delegation to Accounts and Transactions. Account holders use the ''owner'' view by default. Delegated access is made through other views for example ''accountants'', ''share-holders'' or ''tagging-application''. Views can be created via the API and each view has a list of entitlements.</p><p>Views on accounts and transactions filter the underlying data to redact certain fields for certain users. For instance the balance on an account may be hidden from the public. The way to know what is possible on a view is determined in the following JSON.</p><p><strong>Data:</strong> When a view moderates a set of data, some fields my contain the value <code>null</code> rather than the original value. This indicates either that the user is not allowed to see the original data or the field is empty.</p><p>There is currently one exception to this rule; the ''holder'' field in the JSON contains always a value which is either an alias or the real name - indicated by the ''is_alias'' field.</p><p><strong>Action:</strong> When a user performs an action like trying to post a comment (with POST API call), if he is not allowed, the body response will contain an error message.</p><p><strong>Metadata:</strong> Transaction metadata (like images, tags, comments, etc.) will appears <em>ONLY</em> on the view where they have been created e.g. comments posted to the public view only appear on the public view.</p><p>The other account metadata fields (like image_URL, more_info, etc.) are unique through all the views. Example, if a user edits the ''more_info'' field in the ''team'' view, then the view ''authorities'' will show the new value (if it is allowed to do it).</p><h1>All</h1><p><em>Optional</em></p><p>Returns the list of the views created for account ACCOUNT_ID at BANK_ID.</p><p>OAuth authentication is required and the user needs to have access to the owner view.</p>'
      operationId: v1_2_1-getViewsForBankAccount
      parameters:
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ViewsJSONV121'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - Account
        - View
      summary: Create View.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<h1>Create a view on bank account</h1><p>OAuth authentication is required and the user needs to have access to the owner view.  The ''alias'' field in the JSON can take one of three values:</p><ul>  <li><em>public</em>: to use the public alias if there is one specified for the other account.</li>  <li><em>private</em>: to use the public alias if there is one specified for the other account.</li>  <li>  <p><em>''''(empty string)</em>: to use no alias; the view shows the real name of the other account.</p></li></ul><p>The ''hide_metadata_if_alias_used'' field in the JSON can take boolean values. If it is set to <code>true</code> and there is an alias on the other account then the other accounts'' metadata (like more_info, url, image_url, open_corporates_url, etc.) will be hidden. Otherwise the metadata will be shown.</p><p>The ''allowed_actions'' field is a list containing the name of the actions allowed on this view, all the actions contained will be set to <code>true</code> on the view creation, the rest will be set to <code>false</code>.</p>'
      operationId: v1_2_1-createViewForBankAccount
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/CreateViewJson'
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/ViewJSONV121'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/views/{VIEW_ID}':
    delete:
      tags:
        - Account
        - View
      summary: Delete View
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Deletes the view specified by VIEW_ID on the bank account specified by ACCOUNT_ID at bank BANK_ID.</p>
      operationId: v1_2_1-deleteViewForBankAccount
      parameters:
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    put:
      tags:
        - Account
        - View
      summary: Update View.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Update an existing view on a bank account</p><p>OAuth authentication is required and the user needs to have access to the owner view.</p><p>The json sent is the same as during view creation (above), with one difference: the ''name'' field of a view is not editable (it is only set when a view is created)</p>'
      operationId: v1_2_1-updateViewForBankAccount
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/UpdateViewJSON'
        - in: path
          name: VIEW_ID
          description: The view id
          required: true
          type: string
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ViewJSONV121'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorInvalidJsonFormat'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/private':
    get:
      tags:
        - Account
      summary: Get private accounts at one bank.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns the list of private accounts at BANK_ID that the user has access to. For each account the API returns the ID and the available views.</p><p>If you want to see more information on the Views, use the Account Detail call. If you want less information about the account, use the /my accounts call</p><p>Authentication is Mandatory</p>'
      operationId: v2_0_0-privateAccountsAtOneBank
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BasicAccountsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/accounts/public':
    get:
      tags:
        - Account
        - PublicData
      summary: Get Accounts at Bank (Public)
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Returns a list of the public accounts (Anonymous access) at BANK_ID. For each account the API returns the ID and the available views.</p><p>Authentication via OAuth is not required.</p>
      operationId: v2_0_0-publicAccountsAtOneBank
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BasicAccountsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
  '/obp/v2.0.0/banks/{BANK_ID}/atms':
    get:
      tags:
        - Bank
      summary: Get Bank ATMS
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns information about ATMs for a single bank specified by BANK_ID including:</p><ul>  <li>Address</li>  <li>Geo Location</li>  <li>License the data under this endpoint is released under</li></ul><p>Pagination:| By default, 100 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination</p><p>Authentication is Optional</p>'
      operationId: v1_4_0-getAtms
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AtmsJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/branches':
    get:
      tags:
        - Branch
      summary: Get Bank Branches
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns information about branches for a single bank specified by BANK_ID including:</p><ul>  <li>Name</li>  <li>Address</li>  <li>Geo Location</li>  <li>License the data under this endpoint is released under</li></ul><p>Pagination:| By default, 100 records are returned.</p><p>You can use the url query parameters <em>limit</em> and <em>offset</em> for pagination</p><p>Authentication is Optional</p>'
      operationId: v1_4_0-getBranches
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/BranchesJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/cards':
    get:
      tags:
        - Card
      summary: Get cards for the specified bank
      security:
        - directLogin: []
          gatewayLogin: []
      description: ''
      operationId: v1_3_0-getCardsForBank
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PhysicalCardsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/crm-events':
    get:
      tags:
        - Customer
      summary: Get CRM Events
      security:
        - directLogin: []
          gatewayLogin: []
      description: ''
      operationId: v1_4_0-getCrmEvents
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CrmEventsJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/customer':
    get:
      tags:
        - Customer
      summary: Get customer for logged in user
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Information about the currently authenticated user.</p><p>Authentication via OAuth is required.</p>
      operationId: v1_4_0-getCustomer
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerJsonV140'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/customer/{CUSTOMER_ID}/messages':
    post:
      tags:
        - Customer
        - Person
      summary: Add Customer Message.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Add a message for the customer specified by CUSTOMER_ID</p>
      operationId: v1_4_0-addCustomerMessage
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/AddCustomerMessageJson'
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/customer/messages':
    get:
      tags:
        - Customer
      summary: Get Customer Messages (current)
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Get messages for the logged in customer Messages sent to the currently authenticated user.</p><p>Authentication via OAuth is required.</p>
      operationId: v1_4_0-getCustomerMessages
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomerMessagesJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/customers':
    post:
      tags:
        - Customer
        - Person
      summary: Create Customer.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Add a customer linked to the user specified by user_id The Customer resource stores the customer number, legal name, email, phone number, their date of birth, relationship status, education attained, a url for a profile image, KYC status etc. This call may require additional permissions/role in the future. For now the authenticated user can create at most one linked customer. Dates need to be in the format 2013-01-21T23:08:00Z Authentication is Mandatory</p>'
      operationId: v2_0_0-createCustomer
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/CreateCustomerJson'
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/CustomerJsonV140'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorInvalidBankIdFormat'
  '/obp/v2.0.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_check/{KYC_CHECK_ID}':
    put:
      tags:
        - KYC
        - Customer
      summary: Add KYC Check
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Add a KYC check for the customer specified by CUSTOMER_ID. KYC Checks store details of checks on a customer made by the KYC team, their comments and a satisfied status.</p>'
      operationId: v2_0_0-addKycCheck
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PostKycCheckJSON'
        - in: path
          name: KYC_CHECK_ID
          description: The kyc check id
          required: true
          type: string
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KycCheckJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_documents/{KYC_DOCUMENT_ID}':
    put:
      tags:
        - KYC
        - Customer
      summary: Add KYC Document.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Add a KYC document for the customer specified by CUSTOMER_ID. KYC Documents contain the document type (e.g. passport), place of issue, expiry etc. </p>'
      operationId: v2_0_0-addKycDocument
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PostKycDocumentJSON'
        - in: path
          name: KYC_DOCUMENT_ID
          description: The kyc document id
          required: true
          type: string
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KycDocumentJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_media/{KYC_MEDIA_ID}':
    put:
      tags:
        - KYC
        - Customer
      summary: Add KYC Media.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Add some KYC media for the customer specified by CUSTOMER_ID. KYC Media resources relate to KYC Documents and KYC Checks and contain media urls for scans of passports, utility bills etc.</p>'
      operationId: v2_0_0-addKycMedia
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PostKycMediaJSON'
        - in: path
          name: KYC_MEDIA_ID
          description: The kyc media id
          required: true
          type: string
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KycMediaJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/kyc_statuses':
    put:
      tags:
        - KYC
        - Customer
      summary: Add KYC Status
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Add a kyc_status for the customer specified by CUSTOMER_ID. KYC Status is a timeline of the KYC status of the customer</p>
      operationId: v2_0_0-addKycStatus
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/PostKycStatusJSON'
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KycStatusJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/customers/{CUSTOMER_ID}/social_media_handles':
    get:
      tags:
        - Customer
      summary: Get Customer Social Media Handles
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Get social media handles for a customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>
      operationId: v2_0_0-getSocialMediaHandles
      parameters:
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/SocialMediasJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - Customer
      summary: Add Social Media Handle
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Add a social media handle for the customer specified by CUSTOMER_ID.</p>
      operationId: v2_0_0-addSocialMediaHandle
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/SocialMediaJSON'
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/SuccessMessage'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/meetings':
    get:
      tags:
        - Meeting
        - KYC
        - Customer
        - User
        - Experimental
      summary: Get Meetings
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p>'
      operationId: v2_0_0-getMeetings
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MeetingsJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - Meeting
        - KYC
        - Customer
        - User
        - Experimental
      summary: Create Meeting (video conference/call)
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Create Meeting: Initiate a video conference/call with the bank.</p><p>The Meetings resource contains meta data about video/other conference sessions, not the video/audio/chat itself.</p><p>The actual conferencing is handled by external providers. Currently OBP supports tokbox video conferences (WIP).</p><p>This is not a recomendation of tokbox per se.</p><p>provider_id determines the provider of the meeting / video chat service. MUST be url friendly (no spaces).</p><p>purpose_id explains the purpose of the chat. onboarding | mortgage | complaint etc. MUST be url friendly (no spaces).</p><p>Login is required.</p><p>This call is <strong>experimental</strong>. Currently staff_user_id is not set. Further calls will be needed to correctly set this.</p>'
      operationId: v2_0_0-createMeeting
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/CreateMeetingJson'
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/MeetingJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/meetings/MEETING_ID':
    get:
      tags:
        - Meeting
        - KYC
        - Customer
        - User
        - Experimental
      summary: Get Meeting
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get Meeting specified by BANK_ID / MEETING_ID Meetings contain meta data about, and are used to facilitate, video conferences / chats etc.</p><p>The actual conference/chats are handled by external services.</p><p>Login is required.</p><p>This call is <strong>experimental</strong> and will require further authorisation in the future.</p>'
      operationId: v2_0_0-getMeeting
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MeetingJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/products':
    get:
      tags:
        - Bank
      summary: Get Bank Products
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns information about the financial products offered by a bank specified by BANK_ID including:</p><ul>  <li>Name</li>  <li>Code</li>  <li>Category</li>  <li>Family</li>  <li>Super Family</li>  <li>More info URL</li>  <li>Description</li>  <li>Terms and Conditions</li>  <li>License the data under this endpoint is released under Authentication is Optional</li></ul>'
      operationId: v1_4_0-getProducts
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ProductsJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/banks/{BANK_ID}/transaction-types':
    get:
      tags:
        - Bank
      summary: Get Transaction Types at Bank
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get Transaction Types for the bank specified by BANK_ID:</p><p>Lists the possible Transaction Types available at the bank (as opposed to Transaction Request Types which are the possible ways Transactions can be created by this API Server).</p><ul>  <li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li>  <li>bank_id : The bank that supports this TransactionType</li>  <li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li>  <li>summary : A succinct summary</li>  <li>description : A longer description</li>  <li>charge : The charge to the customer for each one of these</li></ul><p>Authentication is Optional</p>'
      operationId: v2_0_0-getTransactionTypes
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionTypesJsonV200'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankNotFound'
  '/obp/v2.0.0/banks/{BANK_ID}/user_customer_links':
    post:
      tags:
        - Customer
        - User
      summary: Create User Customer Link.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Link a User to a Customer</p><p>Authentication is Mandatory</p><p>CanCreateUserCustomerLink OR CanCreateUserCustomerLinkAtAnyBank entitlements are required.</p>
      operationId: v2_0_0-createUserCustomerLinks
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/CreateUserCustomerLinkJson'
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/UserCustomerLinkJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v2.0.0/cards:
    get:
      tags:
        - Card
        - User
      summary: Get cards for the current user
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns data about all the physical cards a user has been issued. These could be debit cards, credit cards, etc.</p>'
      operationId: v1_3_0-getCards
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PhysicalCardsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/customers/{CUSTOMER_ID}/kyc_checks':
    get:
      tags:
        - KYC
        - Customer
      summary: Get Customer KYC Checks
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Get KYC checks for the Customer specified by CUSTOMER_ID.</p><p>Authentication is Mandatory</p>
      operationId: v2_0_0-getKycChecks
      parameters:
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KycChecksJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/customers/{CUSTOMER_ID}/kyc_documents':
    get:
      tags:
        - KYC
        - Customer
      summary: Get Customer KYC Documents
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get KYC (know your customer) documents for a customer specified by CUSTOMER_ID Get a list of documents that affirm the identity of the customer Passport, driving licence etc. Authentication is Optional</p>'
      operationId: v2_0_0-getKycDocuments
      parameters:
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KycDocumentsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/customers/{CUSTOMER_ID}/kyc_media':
    get:
      tags:
        - KYC
        - Customer
      summary: Get KYC Media for a customer
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get KYC media (scans, pictures, videos) that affirms the identity of the customer.</p><p>Authentication is Mandatory</p>'
      operationId: v2_0_0-getKycMedia
      parameters:
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KycMediasJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/customers/{CUSTOMER_ID}/kyc_statuses':
    get:
      tags:
        - KYC
        - Customer
      summary: Get Customer KYC statuses
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Get the KYC statuses for a customer specified by CUSTOMER_ID over time.</p><p>Authentication is Mandatory</p>
      operationId: v2_0_0-getKycStatuses
      parameters:
        - in: path
          name: CUSTOMER_ID
          description: The customer id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KycStatusesJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v2.0.0/entitlements:
    get:
      tags:
        - Role
        - Entitlement
      summary: Get all Entitlements
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Login is required.</p>
      operationId: v2_0_0-getAllEntitlements
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EntitlementJSONs'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v2.0.0/my/accounts:
    get:
      tags:
        - Account
        - PrivateData
      summary: Get Accounts at all Banks (Private)
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Get private accounts at all banks (Authenticated access) Returns the list of accounts containing private views for the user at all banks. For each account the API returns the ID and the available views.</p><p>Authentication is Mandatory</p>
      operationId: v2_0_0-corePrivateAccountsAllBanks
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CoreAccountsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
  '/obp/v2.0.0/my/banks/{BANK_ID}/accounts':
    get:
      tags:
        - Account
        - PrivateData
      summary: Get Accounts at Bank (Private)
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get private accounts at one bank (Authenticated access). Returns the list of accounts containing private views for the user at BANK_ID. For each account the API returns the ID and label. To also see the list of Views, see privateAccountsAtOneBank</p><p>This call MAY have an alias /bank/accounts but ONLY if defaultBank is set in Props</p><p>Authentication is Mandatory</p>'
      operationId: v2_0_0-corePrivateAccountsAtOneBank
      parameters:
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CoreAccountsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account':
    get:
      tags:
        - Account
      summary: Get Account by Id (Core)
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Information returned about the account specified by ACCOUNT_ID:</p><ul>  <li>Number</li>  <li>Owners</li>  <li>Type</li>  <li>Balance</li>  <li>IBAN</li></ul><p>This call returns the owner view and requires access to that view.</p><p>OAuth authentication is required</p>'
      operationId: v2_0_0-getCoreAccountById
      parameters:
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ModeratedCoreAccountJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions':
    get:
      tags:
        - Transaction
        - Account
      summary: Get Transactions for Account (Core)
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns transactions list (Core info) of the account specified by ACCOUNT_ID.</p><p>Authentication is required.</p><p>Possible custom headers for pagination:</p><ul>  <li>obp_sort_by=CRITERIA ==&gt; default value: "completed" field</li>  <li>obp_sort_direction=ASC/DESC ==&gt; default value: DESC</li>  <li>obp_limit=NUMBER ==&gt; default value: 50</li>  <li>obp_offset=NUMBER ==&gt; default value: 0</li>  <li>obp_from_date=DATE =&gt; default value: date of the oldest transaction registered (format below)</li>  <li>obp_to_date=DATE =&gt; default value: date of the newest transaction registered (format below)</li></ul><p><strong>Date format parameter</strong>: "yyyy-MM-dd''T''HH:mm:ss.SSS''Z''" (2014-07-01T00:00:00.000Z) ==&gt; time zone is UTC.</p>'
      operationId: v2_0_0-getCoreTransactionsForBankAccount
      parameters:
        - in: path
          name: ACCOUNT_ID
          description: The account id
          required: true
          type: string
        - in: path
          name: BANK_ID
          description: The bank id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CoreTransactionsJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorBankAccountNotFound'
  '/obp/v2.0.0/resource-docs/{API_VERSION}/obp':
    get:
      tags:
        - API
      summary: Get Resource Docs in OBP format.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may query this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may query this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><ul><li> operation_id is concatenation of "v", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul>'
      operationId: v1_4_0-getResourceDocsObp
      parameters:
        - in: path
          name: API_VERSION
          description: 'eg:v2.2.0, v3.0.0'
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
  /obp/v2.0.0/resource-docs/v.2.2.0/swagger:
    get:
      tags:
        - API
      summary: Get Resource Docs in Swagger format.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>The information returned in this endpoint is continuously being enhanced.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may query this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may query this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>See the Resource Doc endpoint for more information.</p>'
      operationId: v1_4_0-getResourceDocsSwagger
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
  /obp/v2.0.0/root:
    get:
      tags:
        - API
      summary: The root of the API
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Returns information about:</p><ul>  <li>API version</li>  <li>Hosted by information</li>  <li>Git Commit</li></ul>'
      operationId: v1_2_1-root
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/APIInfoJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUnknownError'
  /obp/v2.0.0/search/metrics:
    get:
      tags:
        - API
      summary: Search API Metrics via Elasticsearch.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType - elasticsearch type</p><p>simple query:</p><p>q - plain_text_query</p><p>df - default field to search</p><p>sort - field to sort on</p><p>size - number of hits returned, default 10</p><p>from - show hits starting from</p><p>json query:</p><p>source - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={"query":{"query_string":{"query":"findThis"}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul>  <li>For { use %7B</li>  <li>For } use %7D</li>  <li>For : use %3A</li>  <li>For " use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</p><p>Elastic JSON query: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</p>'
      operationId: v2_0_0-elasticSearchMetrics
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v2.0.0/search/warehouse:
    get:
      tags: []
      summary: Search Warehouse Data Via Elasticsearch
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Search warehouse data via Elastic Search.</p><p>Login is required.</p><p>CanSearchWarehouse entitlement is required to search warehouse data!</p><p>Send your email, name, project name and user_id to the admins to get access.</p><p>Elastic (search) is used in the background. See links below for syntax.</p><p>parameters:</p><p>esType - elasticsearch type</p><p>simple query:</p><p>q - plain_text_query</p><p>df - default field to search</p><p>sort - field to sort on</p><p>size - number of hits returned, default 10</p><p>from - show hits starting from</p><p>json query:</p><p>source - JSON_query_(URL-escaped)</p><p>Example usage:</p><p>GET /search/warehouse/q=findThis</p><p>or:</p><p>GET /search/warehouse/source={"query":{"query_string":{"query":"findThis"}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul>  <li>For { use %7B</li>  <li>For } use %7D</li>  <li>For : use %3A</li>  <li>For " use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</p><p>Elastic JSON query: https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</p><p>You can specify the esType thus: /search/warehouse/esType=type&amp;q=a</p>'
      operationId: v2_0_0-elasticSearchWarehouse
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v2.0.0/users:
    post:
      tags:
        - User
        - Onboarding
      summary: Create User.
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Creates OBP user.  No authorisation (currently) required.</p><p>Mimics current webform to Register.</p><p>Requires username(email) and password.</p><p>Returns 409 error if username not unique.</p><p>May require validation of email address.</p>
      operationId: v2_0_0-createUser
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/CreateUserJson'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/UserJsonV200'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/users/{USER_EMAIL}':
    get:
      tags:
        - User
      summary: Get Users by Email Address
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Get users by email address</p><p>Login is required. CanGetAnyUser entitlement is required,</p>'
      operationId: v2_0_0-getUser
      parameters:
        - in: path
          name: USER_EMAIL
          description: The user email id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UsersJsonV200'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/users/{USER_ID}/entitlement/{ENTITLEMENT_ID}':
    delete:
      tags:
        - User
        - Entitlement
      summary: Delete Entitlement
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Delete Entitlement specified by ENTITLEMENT_ID for an user specified by USER_ID</p><p>Authentication is required and the user needs to be a Super Admin. Super Admins are listed in the Props file.</p>
      operationId: v2_0_0-deleteEntitlement
      parameters:
        - in: path
          name: ENTITLEMENT_ID
          description: The entitblement id
          required: true
          type: string
        - in: path
          name: USER_ID
          description: The user id
          required: true
          type: string
      responses:
        '204':
          description: Success
          schema:
            $ref: '#/definitions/EmptyClassJson'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  '/obp/v2.0.0/users/{USER_ID}/entitlements':
    get:
      tags:
        - Role
        - Entitlement
        - User
      summary: Get Entitlements for User
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Authentication is Mandatory</p>
      operationId: v2_0_0-getEntitlements
      parameters:
        - in: path
          name: USER_ID
          description: The user id
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/EntitlementJSONs'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
    post:
      tags:
        - Role
        - Entitlement
        - User
      summary: Add Entitlement for a User.
      security:
        - directLogin: []
          gatewayLogin: []
      description: '<p>Create Entitlement. Grant Role to User.</p><p>Entitlements are used to grant System or Bank level roles to Users. (For Account level privileges, see Views)</p><p>For a System level Role (.e.g CanGetAnyUser), set bank_id to an empty string i.e. "bank_id":""</p><p>For a Bank level Role (e.g. CanCreateAccount), set bank_id to a valid value e.g. "bank_id":"my-bank-id"</p><p>Authentication is required and the user needs to be a Super Admin. Super Admins are listed in the Props file.</p>'
      operationId: v2_0_0-addEntitlement
      parameters:
        - in: body
          name: body
          description: BANK_BODY
          required: true
          schema:
            $ref: '#/definitions/CreateEntitlementJSON'
        - in: path
          name: USER_ID
          description: The user id
          required: true
          type: string
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/EntitlementJSON'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v2.0.0/users/current:
    get:
      tags:
        - User
      summary: Get User (Current)
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Get the logged in user</p><p>Login is required.</p>
      operationId: v2_0_0-getCurrentUser
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserJsonV200'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
  /obp/v2.0.0/users/current/customers:
    get:
      tags:
        - Person
        - Customer
      summary: Get all customers for logged in user
      security:
        - directLogin: []
          gatewayLogin: []
      description: <p>Information about the currently authenticated user.</p><p>Authentication via OAuth is required.</p>
      operationId: v2_0_0-getCustomers
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CustomersJsonV140'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/ErrorUserNotLoggedIn'
definitions:
  Errordateformat:
    properties:
      message:
        type: string
        example: java.text.SimpleDateFormat@f67a0200
  ErrorHostnameNotSpecified:
    properties:
      message:
        type: string
        example: 'OBP-00001: Hostname not specified. Could not get hostname from Props. Please edit your props file. Here are some example settings: hostname=http://127.0.0.1:8080 or hostname=https://www.example.com'
  ErrorDataImportDisabled:
    properties:
      message:
        type: string
        example: 'OBP-00002: Data import is disabled for this API instance.'
  ErrorTransactionDisabled:
    properties:
      message:
        type: string
        example: 'OBP-00003: Transaction Requests is disabled in this API instance.'
  ErrorServerAddDataError:
    properties:
      message:
        type: string
        example: 'OBP-00004: Server error: could not add message'
  ErrorPublicViewsNotAllowedOnThisInstance:
    properties:
      message:
        type: string
        example: 'OBP-00005: Public views not allowed on this instance. Please set allow_public_views = true in props files. '
  ErrorRemoteDataSecretMatchError:
    properties:
      message:
        type: string
        example: 'OBP-00006: Remote data secret cannot be matched! Check OBP-API and OBP-Storage Props values for remotedata.hostname, remotedata.port and remotedata.secret.'
  ErrorRemoteDataSecretObtainError:
    properties:
      message:
        type: string
        example: 'OBP-00007: Remote data secret cannot be obtained! Check OBP-API and OBP-Storage Props values for remotedata.hostname, remotedata.port and remotedata.secret.'
  ErrorApiVersionNotSupported:
    properties:
      message:
        type: string
        example: 'OBP-00008: The API version you called is not enabled on this server. Please contact your API administrator or use another version.'
  ErrorInvalidJsonFormat:
    properties:
      message:
        type: string
        example: 'OBP-10001: Incorrect json format.'
  ErrorInvalidNumber:
    properties:
      message:
        type: string
        example: 'OBP-10002: Invalid Number. Could not convert value to a number.'
  ErrorInvalidISOCurrencyCode:
    properties:
      message:
        type: string
        example: 'OBP-10003: Invalid Currency Value. It should be three letters ISO Currency Code. '
  ErrorFXCurrencyCodeCombinationsNotSupported:
    properties:
      message:
        type: string
        example: 'OBP-10004: ISO Currency code combination not supported for FX. Please modify the FROM_CURRENCY_CODE or TO_CURRENCY_CODE. '
  ErrorInvalidDateFormat:
    properties:
      message:
        type: string
        example: 'OBP-10005: Invalid Date Format. Could not convert value to a Date.'
  ErrorInvalidInputJsonFormat:
    properties:
      message:
        type: string
        example: 'OBP-10006: Invalid input JSON format.'
  ErrorIncorrectRoleName:
    properties:
      message:
        type: string
        example: 'OBP-10007: Incorrect Role name: '
  ErrorCouldNotTransformJsonToInternalModel:
    properties:
      message:
        type: string
        example: 'OBP-10008: Could not transform Json to internal model.'
  ErrorCountNotSaveOrUpdateResource:
    properties:
      message:
        type: string
        example: 'OBP-10009: Could not save or update resource.'
  ErrorNotImplemented:
    properties:
      message:
        type: string
        example: 'OBP-10010: Not Implemented '
  ErrorFilterSortDirectionError:
    properties:
      message:
        type: string
        example: 'OBP-10023: obp_sort_direction parameter can only take two values: DESC or ASC!'
  ErrorFilterOffersetError:
    properties:
      message:
        type: string
        example: 'OBP-10024: wrong value for obp_offset parameter. Please send a positive integer (=>0)!'
  ErrorFilterLimitError:
    properties:
      message:
        type: string
        example: 'OBP-10025: wrong value for obp_limit parameter. Please send a positive integer (=>1)!'
  ErrorFilterDateFormatError:
    properties:
      message:
        type: string
        example: 'OBP-10026: Failed to parse date string. Please use this format yyyy-MM-dd''T''HH:mm:ss.SSS''Z'' or that one yyyy-MM-dd''T''HH:mm:ss.SSSZ!'
  ErrorInvalidApiVersionString:
    properties:
      message:
        type: string
        example: 'OBP-00027: Invalid API Version string. We could not find the version specified.'
  ErrorUserNotLoggedIn:
    properties:
      message:
        type: string
        example: 'OBP-20001: User not logged in. Authentication is required!'
  ErrorDirectLoginMissingParameters:
    properties:
      message:
        type: string
        example: 'OBP-20002: These DirectLogin parameters are missing: '
  ErrorDirectLoginInvalidToken:
    properties:
      message:
        type: string
        example: 'OBP-20003: This DirectLogin token is invalid or expired: '
  ErrorInvalidLoginCredentials:
    properties:
      message:
        type: string
        example: 'OBP-20004: Invalid login credentials. Check username/password.'
  ErrorUserNotFoundById:
    properties:
      message:
        type: string
        example: 'OBP-20005: User not found. Please specify a valid value for USER_ID.'
  ErrorUserHasMissingRoles:
    properties:
      message:
        type: string
        example: 'OBP-20006: User is missing one or more roles: '
  ErrorUserNotFoundByEmail:
    properties:
      message:
        type: string
        example: 'OBP-20007: User not found by email.'
  ErrorInvalidConsumerKey:
    properties:
      message:
        type: string
        example: 'OBP-20008: Invalid Consumer Key.'
  ErrorInvalidConsumerCredentials:
    properties:
      message:
        type: string
        example: 'OBP-20009: Invalid consumer credentials'
  ErrorInvalidValueLength:
    properties:
      message:
        type: string
        example: 'OBP-20010: Value too long'
  ErrorInvalidValueCharacters:
    properties:
      message:
        type: string
        example: 'OBP-20011: Value contains invalid characters'
  ErrorInvalidDirectLoginParameters:
    properties:
      message:
        type: string
        example: 'OBP-20012: Invalid direct login parameters'
  ErrorUsernameHasBeenLocked:
    properties:
      message:
        type: string
        example: 'OBP-20013: The account has been locked, please contact administrator !'
  ErrorInvalidConsumerId:
    properties:
      message:
        type: string
        example: 'OBP-20014: Invalid Consumer ID. Please specify a valid value for CONSUMER_ID.'
  ErrorUserNoPermissionUpdateConsumer:
    properties:
      message:
        type: string
        example: 'OBP-20015: Only the developer that created the consumer key should be able to edit it, please login with the right user.'
  ErrorUnexpectedErrorDuringLogin:
    properties:
      message:
        type: string
        example: 'OBP-20016: An unexpected login error occurred. Please try again.'
  ErrorUserNoPermissionAccessView:
    properties:
      message:
        type: string
        example: 'OBP-20017: Current user does not have access to the view. Please specify a valid value for VIEW_ID.'
  ErrorInvalidInternalRedirectUrl:
    properties:
      message:
        type: string
        example: 'OBP-20018: Login failed, invalid internal redirectUrl.'
  ErrorUserNoOwnerView:
    properties:
      message:
        type: string
        example: 'OBP-20019: User does not have access to owner view. '
  ErrorInvalidCustomViewFormat:
    properties:
      message:
        type: string
        example: 'OBP-20020: View name must start with `_`. eg: _work, _life '
  ErrorSystemViewsCanNotBeModified:
    properties:
      message:
        type: string
        example: 'OBP-20021: System Views can not be modified. Only the created views can be modified.'
  ErrorUserNotFoundByUsername:
    properties:
      message:
        type: string
        example: 'OBP-20027: User not found by username.'
  ErrorGatewayLoginMissingParameters:
    properties:
      message:
        type: string
        example: 'OBP-20028: These GatewayLogin parameters are missing: '
  ErrorGatewayLoginUnknownError:
    properties:
      message:
        type: string
        example: 'OBP-20029: Unknown Gateway login error.'
  ErrorGatewayLoginHostPropertyMissing:
    properties:
      message:
        type: string
        example: 'OBP-20030: Property gateway.host is not defined.'
  ErrorGatewayLoginWhiteListAddresses:
    properties:
      message:
        type: string
        example: 'OBP-20031: Gateway login can be done only from allowed addresses.'
  ErrorGatewayLoginJwtTokenIsNotValid:
    properties:
      message:
        type: string
        example: 'OBP-20040: The JWT is corrupted/changed during a transport.'
  ErrorGatewayLoginCannotExtractJwtToken:
    properties:
      message:
        type: string
        example: 'OBP-20041: Header, Payload and Signature cannot be extracted from the JWT.'
  ErrorGatewayLoginNoNeedToCallCbs:
    properties:
      message:
        type: string
        example: 'OBP-20042: There is no need to call CBS'
  ErrorGatewayLoginCannotFindUser:
    properties:
      message:
        type: string
        example: 'OBP-20043: User cannot be found. Please initiate CBS communication in order to create it.'
  ErrorGatewayLoginCannotGetCbsToken:
    properties:
      message:
        type: string
        example: 'OBP-20044: Cannot get the CBSToken response from South side'
  ErrorGatewayLoginCannotGetOrCreateUser:
    properties:
      message:
        type: string
        example: 'OBP-20045: Cannot get or create user during GatewayLogin process.'
  ErrorGatewayLoginNoJwtForResponse:
    properties:
      message:
        type: string
        example: 'OBP-20046: There is no useful value for JWT.'
  ErrorUserNotSuperAdmin:
    properties:
      message:
        type: string
        example: 'OBP-20050: User is not super admin!'
  ErrorBankNotFound:
    properties:
      message:
        type: string
        example: 'OBP-30001: Bank not found. Please specify a valid value for BANK_ID.'
  ErrorCustomerNotFound:
    properties:
      message:
        type: string
        example: 'OBP-30002: Customer not found. Please specify a valid value for CUSTOMER_NUMBER.'
  ErrorCustomerNotFoundByCustomerId:
    properties:
      message:
        type: string
        example: 'OBP-30002: Customer not found. Please specify a valid value for CUSTOMER_ID.'
  ErrorAccountNotFound:
    properties:
      message:
        type: string
        example: 'OBP-30003: Account not found. Please specify a valid value for ACCOUNT_ID.'
  ErrorCounterpartyNotFound:
    properties:
      message:
        type: string
        example: 'OBP-30004: Counterparty not found. The BANK_ID / ACCOUNT_ID specified does not exist on this server.'
  ErrorViewNotFound:
    properties:
      message:
        type: string
        example: 'OBP-30005: View not found for Account. Please specify a valid value for VIEW_ID'
  ErrorCustomerNumberAlreadyExists:
    properties:
      message:
        type: string
        example: 'OBP-30006: Customer Number already exists. Please specify a different value for BANK_ID or CUSTOMER_NUMBER.'
  ErrorCustomerAlreadyExistsForUser:
    properties:
      message:
        type: string
        example: 'OBP-30007: The User is already linked to a Customer at the bank specified by BANK_ID'
  ErrorUserCustomerLinksNotFoundForUser:
    properties:
      message:
        type: string
        example: 'OBP-30008: User Customer Link not found by USER_ID'
  ErrorAtmNotFoundByAtmId:
    properties:
      message:
        type: string
        example: 'OBP-30009: ATM not found. Please specify a valid value for ATM_ID.'
  ErrorBranchNotFoundByBranchId:
    properties:
      message:
        type: string
        example: 'OBP-300010: Branch not found. Please specify a valid value for BRANCH_ID.'
  ErrorProductNotFoundByProductCode:
    properties:
      message:
        type: string
        example: 'OBP-30011: Product not found. Please specify a valid value for PRODUCT_CODE.'
  ErrorCounterpartyNotFoundByIban:
    properties:
      message:
        type: string
        example: 'OBP-30012: Counterparty not found. Please specify a valid value for IBAN.'
  ErrorCounterpartyBeneficiaryPermit:
    properties:
      message:
        type: string
        example: 'OBP-30013: The account can not send money to the Counterparty. Please set the Counterparty ''isBeneficiary'' true first'
  ErrorCounterpartyAlreadyExists:
    properties:
      message:
        type: string
        example: 'OBP-30014: Counterparty already exists. Please specify a different value for BANK_ID or ACCOUNT_ID or VIEW_ID or NAME.'
  ErrorCreateBranchError:
    properties:
      message:
        type: string
        example: 'OBP-30015: Could not insert the Branch'
  ErrorUpdateBranchError:
    properties:
      message:
        type: string
        example: 'OBP-30016: Could not update the Branch'
  ErrorCounterpartyNotFoundByCounterpartyId:
    properties:
      message:
        type: string
        example: 'OBP-30017: Counterparty not found. Please specify a valid value for COUNTERPARTY_ID.'
  ErrorBankAccountNotFound:
    properties:
      message:
        type: string
        example: 'OBP-30018: Bank Account not found. Please specify valid values for BANK_ID and ACCOUNT_ID. '
  ErrorConsumerNotFoundByConsumerId:
    properties:
      message:
        type: string
        example: 'OBP-30019: Consumer not found. Please specify a valid value for CONSUMER_ID.'
  ErrorCreateBankError:
    properties:
      message:
        type: string
        example: 'OBP-30020: Could not create the Bank'
  ErrorUpdateBankError:
    properties:
      message:
        type: string
        example: 'OBP-30021: Could not update the Bank'
  ErrorViewNoPermission:
    properties:
      message:
        type: string
        example: 'OBP-30022: The current view does not have the permission: '
  ErrorUpdateConsumerError:
    properties:
      message:
        type: string
        example: 'OBP-30023: Cannot update Consumer '
  ErrorCreateConsumerError:
    properties:
      message:
        type: string
        example: 'OBP-30024: Could not create Consumer '
  ErrorCreateUserCustomerLinksError:
    properties:
      message:
        type: string
        example: 'OBP-30025: Could not create user_customer_links '
  ErrorConsumerKeyAlreadyExists:
    properties:
      message:
        type: string
        example: 'OBP-30026: Consumer Key already exists. Please specify a different value.'
  ErrorNoExistingAccountHolders:
    properties:
      message:
        type: string
        example: 'OBP-30027: Account Holders not found. The BANK_ID / ACCOUNT_ID specified for account holder does not exist on this server'
  ErrorCreateAtmError:
    properties:
      message:
        type: string
        example: 'OBP-30028: Could not insert the ATM'
  ErrorUpdateAtmError:
    properties:
      message:
        type: string
        example: 'OBP-30029: Could not update the ATM'
  ErrorCreateProductError:
    properties:
      message:
        type: string
        example: 'OBP-30030: Could not insert the Product'
  ErrorUpdateProductError:
    properties:
      message:
        type: string
        example: 'OBP-30031: Could not update the Product'
  ErrorCreateCardError:
    properties:
      message:
        type: string
        example: 'OBP-30032: Could not insert the Card'
  ErrorUpdateCardError:
    properties:
      message:
        type: string
        example: 'OBP-30033: Could not update the Card'
  ErrorViewIdNotSupported:
    properties:
      message:
        type: string
        example: 'OBP-30034: This ViewId is do not supported. Only support four now: Owner, Public, Accountant, Auditor.'
  ErrorUserCustomerLinkNotFound:
    properties:
      message:
        type: string
        example: 'OBP-30035: User Customer Link not found'
  ErrorMeetingsNotSupported:
    properties:
      message:
        type: string
        example: 'OBP-30101: Meetings are not supported on this server.'
  ErrorMeetingApiKeyNotConfigured:
    properties:
      message:
        type: string
        example: 'OBP-30102: Meeting provider API Key is not configured.'
  ErrorMeetingApiSecretNotConfigured:
    properties:
      message:
        type: string
        example: 'OBP-30103: Meeting provider Secret is not configured.'
  ErrorMeetingNotFound:
    properties:
      message:
        type: string
        example: 'OBP-30104: Meeting not found.'
  ErrorInvalidAccountBalanceCurrency:
    properties:
      message:
        type: string
        example: 'OBP-30105: Invalid Balance Currency.'
  ErrorInvalidAccountBalanceAmount:
    properties:
      message:
        type: string
        example: 'OBP-30106: Invalid Balance Amount.'
  ErrorInvalidUserId:
    properties:
      message:
        type: string
        example: 'OBP-30107: Invalid User Id.'
  ErrorInvalidAccountType:
    properties:
      message:
        type: string
        example: 'OBP-30108: Invalid Account Type.'
  ErrorInitialBalanceMustBeZero:
    properties:
      message:
        type: string
        example: 'OBP-30109: Initial Balance of Account must be Zero (0).'
  ErrorInvalidAccountIdFormat:
    properties:
      message:
        type: string
        example: 'OBP-30110: Invalid Account Id. The ACCOUNT_ID should only contain 0-9/a-z/A-Z/''-''/''.''/''_'', the length should be smaller than 255.'
  ErrorInvalidBankIdFormat:
    properties:
      message:
        type: string
        example: 'OBP-30111: Invalid Bank Id. The BANK_ID should only contain 0-9/a-z/A-Z/''-''/''.''/''_'', the length should be smaller than 255.'
  ErrorInvalidAccountInitialBalance:
    properties:
      message:
        type: string
        example: 'OBP-30112: Invalid Number. Initial balance must be a number, e.g 1000.00'
  ErrorEntitlementIsBankRole:
    properties:
      message:
        type: string
        example: 'OBP-30205: This entitlement is a Bank Role. Please set bank_id to a valid bank id.'
  ErrorEntitlementIsSystemRole:
    properties:
      message:
        type: string
        example: 'OBP-30206: This entitlement is a System Role. Please set bank_id to empty string.'
  ErrorInvalidStrongPasswordFormat:
    properties:
      message:
        type: string
        example: 'OBP-30207: Invalid Password Format. Your password should EITHER be at least 10 characters long and contain mixed numbers and both upper and lower case letters and at least one special character, OR be longer than 16 characters.'
  ErrorAccountIdAlreadyExsits:
    properties:
      message:
        type: string
        example: 'OBP-30208: Account_ID already exists at the Bank.'
  ErrorInsufficientAuthorisationToCreateBranch:
    properties:
      message:
        type: string
        example: 'OBP-30209: Insufficient authorisation to Create Branch. You do not have the role CanCreateBranch.'
  ErrorInsufficientAuthorisationToCreateBank:
    properties:
      message:
        type: string
        example: 'OBP-30210: Insufficient authorisation to Create Bank. You do not have the role CanCreateBank.'
  ErrorInvalidConnector:
    properties:
      message:
        type: string
        example: 'OBP-30211: Invalid Connector Version. Please specify a valid value for CONNECTOR.'
  ErrorEntitlementNotFound:
    properties:
      message:
        type: string
        example: 'OBP-30212: EntitlementId not found'
  ErrorEntitlementDoesNotBelongsToUser:
    properties:
      message:
        type: string
        example: 'OBP-30213: ENTITLEMENT_ID does not belongs to USER_ID'
  ErrorInvalidTransactionRequestType:
    properties:
      message:
        type: string
        example: 'OBP-40001: Invalid value for TRANSACTION_REQUEST_TYPE'
  ErrorInsufficientAuthorisationToCreateTransactionRequest:
    properties:
      message:
        type: string
        example: 'OBP-40002: Insufficient authorisation to create TransactionRequest. The Transaction Request could not be created because you don''t have access to the owner view of the from account or you don''t have access to canCreateAnyTransactionRequest.'
  ErrorInvalidTransactionRequestCurrency:
    properties:
      message:
        type: string
        example: 'OBP-40003: Transaction Request Currency must be the same as From Account Currency.'
  ErrorInvalidTransactionRequestId:
    properties:
      message:
        type: string
        example: 'OBP-40004: Transaction Request Id not found.'
  ErrorInsufficientAuthorisationToCreateTransactionType:
    properties:
      message:
        type: string
        example: 'OBP-40005: Insufficient authorisation to Create Transaction Type offered by the bank. The Request could not be created because you don''t have access to CanCreateTransactionType.'
  ErrorCreateTransactionTypeInsertError:
    properties:
      message:
        type: string
        example: 'OBP-40006: Could not insert Transaction Type: Non unique BANK_ID / SHORT_CODE'
  ErrorCreateTransactionTypeUpdateError:
    properties:
      message:
        type: string
        example: 'OBP-40007: Could not update Transaction Type: Non unique BANK_ID / SHORT_CODE'
  ErrorNotPositiveAmount:
    properties:
      message:
        type: string
        example: 'OBP-40008: Can''t send a payment with a value of 0 or less.'
  ErrorTransactionRequestTypeHasChanged:
    properties:
      message:
        type: string
        example: 'OBP-40009: The TRANSACTION_REQUEST_TYPE has changed.'
  ErrorInvalidTransactionRequesChallengeId:
    properties:
      message:
        type: string
        example: 'OBP-40010: Invalid Challenge Id. Please specify a valid value for CHALLENGE_ID.'
  ErrorTransactionRequestStatusNotInitiated:
    properties:
      message:
        type: string
        example: 'OBP-40011: Transaction Request Status is not INITIATED.'
  ErrorCounterpartyNotFoundOtherAccountProvider:
    properties:
      message:
        type: string
        example: 'OBP-40012: Please set up the otherAccountRoutingScheme and otherBankRoutingScheme fields of the Counterparty to ''OBP'''
  ErrorInvalidChargePolicy:
    properties:
      message:
        type: string
        example: 'OBP-40013: Invalid Charge Policy. Please specify a valid value for Charge_Policy: SHARED, SENDER or RECEIVER. '
  ErrorAllowedAttemptsUsedUp:
    properties:
      message:
        type: string
        example: 'OBP-40014: Sorry, you''ve used up your allowed attempts. '
  ErrorInvalidChallengeType:
    properties:
      message:
        type: string
        example: 'OBP-40015: Invalid Challenge Type. Please specify a valid value for CHALLENGE_TYPE, when you create the transaction request.'
  ErrorInvalidChallengeAnswer:
    properties:
      message:
        type: string
        example: 'OBP-40016: Invalid Challenge Answer. Please specify a valid value for answer in Json body.'
  ErrorInvalidPhoneNumber:
    properties:
      message:
        type: string
        example: 'OBP-40017: Invalid Phone Number. Please specify a valid value for PHONE_NUMBER. Eg:+9722398746 '
  ErrorUnknownError:
    properties:
      message:
        type: string
        example: 'OBP-50000: Unknown Error.'
  ErrorFutureTimeoutException:
    properties:
      message:
        type: string
        example: 'OBP-50001: Future Timeout Exception.'
  ErrorKafkaMessageClassCastException:
    properties:
      message:
        type: string
        example: 'OBP-50002: Kafka Response Message Class Cast Exception.'
  ErrorAdapterOrCoreBankingSystemException:
    properties:
      message:
        type: string
        example: 'OBP-50003: Adapter Or Core Banking System Exception. Failed to get a valid response from the south side Adapter or Core Banking System.'
  ErrorCurrentUserNotFoundException:
    properties:
      message:
        type: string
        example: 'OBP-50004: Method (AuthUser.getCurrentUser) can not find the current user in the current context!'
  ErrorAnUnspecifiedOrInternalErrorOccurred:
    properties:
      message:
        type: string
        example: 'OBP-50005: An unspecified or internal error occurred.'
  ErrorKafkaInterruptedException:
    properties:
      message:
        type: string
        example: 'OBP-50006: Kafka interrupted exception.'
  ErrorKafkaExecutionException:
    properties:
      message:
        type: string
        example: 'OBP-50007: Kafka execution exception.'
  ErrorKafkaStreamTimeoutException:
    properties:
      message:
        type: string
        example: 'OBP-50008: Akka Kafka stream timeout exception.'
  ErrorKafkaUnknownError:
    properties:
      message:
        type: string
        example: 'OBP-50009: Kafka unknown error.'
  ErrorConnectorEmptyResponse:
    properties:
      message:
        type: string
        example: 'OBP-50200: Connector cannot return the data we requested.'
  ErrorInvalidConnectorResponseForGetBankAccounts:
    properties:
      message:
        type: string
        example: 'OBP-50201: Connector did not return the set of accounts we requested.'
  ErrorInvalidConnectorResponseForGetBankAccount:
    properties:
      message:
        type: string
        example: 'OBP-50202: Connector did not return the account we requested.'
  ErrorInvalidConnectorResponseForGetTransaction:
    properties:
      message:
        type: string
        example: 'OBP-50203: Connector did not return the transaction we requested.'
  ErrorInvalidConnectorResponseForGetTransactions:
    properties:
      message:
        type: string
        example: 'OBP-50204: Connector did not return the set of transactions we requested.'
  ErrorInvalidConnectorResponseForGetTransactionRequests210:
    properties:
      message:
        type: string
        example: 'OBP-50205: Connector did not return the set of transaction requests we requested.'
  ErrorallFields:
    properties:
      message:
        type: string
        example: 'null'
  EmptyClassJson:
    properties: {}
  CreateViewJson:
    required:
      - name
      - description
      - is_public
      - which_alias_to_use
      - hide_metadata_if_alias_used
      - allowed_actions
    properties:
      name:
        type: string
        example: _test
      description:
        type: string
        example: good
      is_public:
        type: boolean
        example: 'true'
      hide_metadata_if_alias_used:
        type: boolean
        example: 'false'
      which_alias_to_use:
        type: string
        example: good
      allowed_actions:
        type: array
        items:
          type: string
  AliasJSON:
    required:
      - alias
    properties:
      alias:
        type: string
        example: String
  CorporateLocationJSON:
    required:
      - corporate_location
    properties:
      corporate_location:
        $ref: '#/definitions/LocationPlainJSON'
  UpdateViewJSON:
    required:
      - description
      - is_public
      - which_alias_to_use
      - hide_metadata_if_alias_used
      - allowed_actions
    properties:
      description:
        type: string
        example: good
      is_public:
        type: boolean
        example: 'true'
      hide_metadata_if_alias_used:
        type: boolean
        example: 'true'
      which_alias_to_use:
        type: string
        example: good
      allowed_actions:
        type: array
        items:
          type: string
  CreateEntitlementJSON:
    required:
      - bank_id
      - role_name
    properties:
      role_name:
        type: string
        example: String
      bank_id:
        type: string
        example: String
  UpdateAccountJSON:
    required:
      - id
      - label
      - bank_id
    properties:
      bank_id:
        type: string
        example: gh.29.uk
      label:
        type: string
        example: label
      id:
        type: string
        example: '123123'
  ImageUrlJSON:
    required:
      - image_URL
    properties:
      image_URL:
        type: string
        example: String
  CreateCustomerJson:
    required:
      - user_id
      - customer_number
      - legal_name
      - mobile_phone_number
      - email
      - face_image
      - date_of_birth
      - relationship_status
      - dependants
      - dob_of_dependants
      - highest_education_attained
      - employment_status
      - kyc_status
      - last_ok_date
    properties:
      email:
        type: string
        example: String
      mobile_phone_number:
        type: string
        example: String
      customer_number:
        type: string
        example: String
      highest_education_attained:
        type: string
        example: String
      user_id:
        type: string
        example: String
      dob_of_dependants:
        type: array
        items:
          type: string
          format: date
      date_of_birth:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      last_ok_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      employment_status:
        type: string
        example: String
      legal_name:
        type: string
        example: String
      face_image:
        $ref: '#/definitions/CustomerFaceImageJson'
      dependants:
        type: integer
        format: int32
        example: '1'
      relationship_status:
        type: string
        example: String
      kyc_status:
        type: boolean
        example: 'true'
  PostKycMediaJSON:
    required:
      - customer_number
      - type
      - url
      - date
      - relates_to_kyc_document_id
      - relates_to_kyc_check_id
    properties:
      url:
        type: string
        example: String
      customer_number:
        type: string
        example: String
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      relates_to_kyc_document_id:
        type: string
        example: String
      relates_to_kyc_check_id:
        type: string
        example: String
      type:
        type: string
        example: String
  CreateUserCustomerLinkJson:
    required:
      - user_id
      - customer_id
    properties:
      customer_id:
        type: string
        example: String
      user_id:
        type: string
        example: String
  ViewIdsJson:
    required:
      - views
    properties:
      views:
        type: array
        items:
          type: string
  PostKycDocumentJSON:
    required:
      - customer_number
      - type
      - number
      - issue_date
      - issue_place
      - expiry_date
    properties:
      number:
        type: string
        example: String
      customer_number:
        type: string
        example: String
      issue_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      type:
        type: string
        example: String
      issue_place:
        type: string
        example: String
      expiry_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
  OpenCorporateUrlJSON:
    required:
      - open_corporates_URL
    properties:
      open_corporates_URL:
        type: string
        example: String
  SocialMediaJSON:
    required:
      - customer_number
      - type
      - handle
      - date_added
      - date_activated
    properties:
      date_activated:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      customer_number:
        type: string
        example: PlaceholderString
      date_added:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      type:
        type: string
        example: PlaceholderString
      handle:
        type: string
        example: PlaceholderString
  ChallengeAnswerJSON:
    required:
      - id
      - answer
    properties:
      answer:
        type: string
        example: good
      id:
        type: string
        example: b20dd004-93e3-494f-8773-69e3ff8c205e
  TransactionNarrativeJSON:
    required:
      - narrative
    properties:
      narrative:
        type: string
        example: narative
  CreateMeetingJson:
    required:
      - provider_id
      - purpose_id
    properties:
      purpose_id:
        type: string
        example: String
      provider_id:
        type: string
        example: String
  PostTransactionWhereJSON:
    required:
      - where
    properties:
      where:
        $ref: '#/definitions/LocationPlainJSON'
  CreateAccountJSON:
    required:
      - user_id
      - label
      - type
      - balance
    properties:
      balance:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      type:
        type: string
        example: String
      label:
        type: string
        example: String
      user_id:
        type: string
        example: String
  CreateUserJson:
    required:
      - email
      - username
      - password
      - first_name
      - last_name
    properties:
      first_name:
        type: string
        example: String
      email:
        type: string
        example: String
      username:
        type: string
        example: String
      last_name:
        type: string
        example: String
      password:
        type: string
        example: String
  TransactionRequestBodyJsonV200:
    required:
      - to
      - value
      - description
    properties:
      description:
        type: string
        example: Good
      value:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      to:
        $ref: '#/definitions/TransactionRequestAccountJsonV140'
  MoreInfoJSON:
    required:
      - more_info
    properties:
      more_info:
        type: string
        example: String
  PostTransactionCommentJSON:
    required:
      - value
    properties:
      value:
        type: string
        example: String
  PostTransactionImageJSON:
    required:
      - label
      - URL
    properties:
      URL:
        type: string
        example: String
      label:
        type: string
        example: String
  AddCustomerMessageJson:
    required:
      - message
      - from_department
      - from_person
    properties:
      from_person:
        type: string
        example: String
      from_department:
        type: string
        example: String
      message:
        type: string
        example: String
  PostTransactionTagJSON:
    required:
      - value
    properties:
      value:
        type: string
        example: String
  UrlJSON:
    required:
      - URL
    properties:
      URL:
        type: string
        example: String
  PostKycCheckJSON:
    required:
      - customer_number
      - date
      - how
      - staff_user_id
      - staff_name
      - satisfied
      - comments
    properties:
      customer_number:
        type: string
        example: '1239879'
      how:
        type: string
        example: online_meeting
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      satisfied:
        type: boolean
        example: 'true'
      staff_user_id:
        type: string
        example: '67876'
      staff_name:
        type: string
        example: Simon
      comments:
        type: string
        example: String
  PhysicalLocationJSON:
    required:
      - physical_location
    properties:
      physical_location:
        $ref: '#/definitions/LocationPlainJSON'
  PostKycStatusJSON:
    required:
      - customer_number
      - ok
      - date
    properties:
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      ok:
        type: boolean
        example: 'true'
      customer_number:
        type: string
        example: String
  License:
    required:
      - id
      - name
    properties:
      name:
        type: string
        example: String
      id:
        type: string
        example: id
  Routing:
    required:
      - scheme
      - address
    properties:
      address:
        type: string
        example: 123abc
      scheme:
        type: string
        example: OBP
  BranchId:
    required:
      - value
    properties:
      value:
        type: string
        example: String
  AmountOfMoney:
    required:
      - currency
      - amount
    properties:
      amount:
        type: string
        example: '100'
      currency:
        type: string
        example: EUR
  AccountRouting:
    required:
      - scheme
      - address
    properties:
      address:
        type: string
        example: String
      scheme:
        type: string
        example: String
  CoreAccount:
    required:
      - id
      - label
      - bank_id
      - account_routing
    properties:
      account_routing:
        $ref: '#/definitions/AccountRouting'
      bank_id:
        type: string
        example: ' String'
      label:
        type: string
        example: ' String'
      id:
        type: string
        example: String
  TransactionTypeId:
    required:
      - value
    properties:
      value:
        type: string
        example: '123'
  BankId:
    required:
      - value
    properties:
      value:
        type: string
        example: gh.uk.9j
  TransactionRequestId:
    required:
      - value
    properties:
      value:
        type: string
        example: '123'
  CounterpartyId:
    required:
      - value
    properties:
      value:
        type: string
        example: '123'
  AccountId:
    required:
      - value
    properties:
      value:
        type: string
        example: '123'
  ViewId:
    required:
      - value
    properties:
      value:
        type: string
        example: owner
  TransactionType:
    required:
      - id
      - bankId
      - shortCode
      - summary
      - description
      - charge
    properties:
      shortCode:
        type: string
        example: '80080'
      description:
        type: string
        example: good
      id:
        $ref: '#/definitions/TransactionTypeId'
      charge:
        $ref: '#/definitions/AmountOfMoney'
      bankId:
        $ref: '#/definitions/BankId'
      summary:
        type: string
        example: good
  TransactionRequestCharge:
    required:
      - summary
      - value
    properties:
      value:
        $ref: '#/definitions/AmountOfMoney'
      summary:
        type: string
        example: String
  TransactionRequestChallenge:
    required:
      - id
      - allowed_attempts
      - challenge_type
    properties:
      challenge_type:
        type: string
        example: String
      allowed_attempts:
        type: integer
        format: int32
        example: '4'
      id:
        type: string
        example: String
  TransactionRequestAccount:
    required:
      - bank_id
      - account_id
    properties:
      account_id:
        type: string
        example: String
      bank_id:
        type: string
        example: String
  TransactionRequestBody:
    required:
      - to
      - value
      - description
    properties:
      description:
        type: string
        example: String
      value:
        $ref: '#/definitions/AmountOfMoney'
      to:
        $ref: '#/definitions/TransactionRequestAccount'
  TransactionRequest:
    required:
      - id
      - type
      - from
      - details
      - body
      - transaction_ids
      - status
      - start_date
      - end_date
      - challenge
      - charge
      - charge_policy
      - counterparty_id
      - name
      - this_bank_id
      - this_account_id
      - this_view_id
      - other_account_routing_scheme
      - other_account_routing_address
      - other_bank_routing_scheme
      - other_bank_routing_address
      - is_beneficiary
    properties:
      other_account_routing_address:
        type: string
        example: String
      other_account_routing_scheme:
        type: string
        example: String
      body:
        $ref: '#/definitions/TransactionRequestBody'
      challenge:
        $ref: '#/definitions/TransactionRequestChallenge'
      name:
        type: string
        example: String
      start_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      is_beneficiary:
        type: boolean
        example: 'true'
      other_bank_routing_scheme:
        type: string
        example: String
      id:
        $ref: '#/definitions/TransactionRequestId'
      this_account_id:
        $ref: '#/definitions/AccountId'
      end_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      status:
        type: string
        example: String
      charge_policy:
        type: string
        example: String
      from:
        $ref: '#/definitions/TransactionRequestAccount'
      this_view_id:
        $ref: '#/definitions/ViewId'
      details:
        type: string
        example: ''
      charge:
        $ref: '#/definitions/TransactionRequestCharge'
      other_bank_routing_address:
        type: string
        example: String
      this_bank_id:
        $ref: '#/definitions/BankId'
      type:
        type: string
        example: String
      counterparty_id:
        $ref: '#/definitions/CounterpartyId'
      transaction_ids:
        type: string
        example: String
  MessageDocJson:
    required:
      - process
      - message_format
      - description
      - example_outbound_message
      - example_inbound_message
    properties:
      example_inbound_message:
        type: string
        example: ''
      description:
        type: string
        example: get Banks
      process:
        type: string
        example: getBanks
      message_format:
        type: string
        example: KafkaV2017
      example_outbound_message:
        type: string
        example: ''
  MessageDocsJson:
    required:
      - messageDocs
    properties:
      messageDocs:
        type: array
        items:
          $ref: '#/definitions/MessageDocJson'
  MakePaymentJson:
    required:
      - bank_id
      - account_id
      - amount
    properties:
      amount:
        type: string
        example: String
      account_id:
        type: string
        example: String
      bank_id:
        type: string
        example: String
  TransactionIdJson:
    required:
      - transaction_id
    properties:
      transaction_id:
        type: string
        example: '123'
  HostedBy:
    required:
      - organisation
      - email
      - phone
    properties:
      phone:
        type: string
        example: String
      email:
        type: string
        example: String
      organisation:
        type: string
        example: String
  Akka:
    properties:
      remote_data_secret_matched:
        type: boolean
        example: 'true'
  APIInfoJSON:
    required:
      - version
      - version_status
      - git_commit
      - connector
      - hosted_by
      - akka
    properties:
      akka:
        $ref: '#/definitions/Akka'
      version_status:
        type: string
        example: String
      version:
        type: string
        example: String
      connector:
        type: string
        example: String
      hosted_by:
        $ref: '#/definitions/HostedBy'
      git_commit:
        type: string
        example: String
  ErrorMessage:
    required:
      - error
    properties:
      error:
        type: string
        example: String
  AccountRoutingJsonV121:
    required:
      - scheme
      - address
    properties:
      address:
        type: string
        example: DE89 3704 0044 0532 0130 00
      scheme:
        type: string
        example: IBAN
  AmountOfMoneyJsonV121:
    required:
      - currency
      - amount
    properties:
      amount:
        type: string
        example: '10'
      currency:
        type: string
        example: EUR
  AccountRuleJsonV300:
    required:
      - scheme
      - value
    properties:
      value:
        type: string
        example: '10'
      scheme:
        type: string
        example: OVERDRAFT
  UserJSONV121:
    required:
      - id
      - provider
      - display_name
    properties:
      display_name:
        type: string
        example: OBP
      provider:
        type: string
        example: OBP
      id:
        type: string
        example: 5995d6a2-01b3-423c-a173-5481df49bdaf
  ViewJSONV121:
    required:
      - id
      - short_name
      - description
      - is_public
      - alias
      - hide_metadata_if_alias_used
      - can_add_comment
      - can_add_corporate_location
      - can_add_image
      - can_add_image_url
      - can_add_more_info
      - can_add_open_corporates_url
      - can_add_physical_location
      - can_add_private_alias
      - can_add_public_alias
      - can_add_tag
      - can_add_url
      - can_add_where_tag
      - can_delete_comment
      - can_delete_corporate_location
      - can_delete_image
      - can_delete_physical_location
      - can_delete_tag
      - can_delete_where_tag
      - can_edit_owner_comment
      - can_see_bank_account_balance
      - can_see_bank_account_bank_name
      - can_see_bank_account_currency
      - can_see_bank_account_iban
      - can_see_bank_account_label
      - can_see_bank_account_national_identifier
      - can_see_bank_account_number
      - can_see_bank_account_owners
      - can_see_bank_account_swift_bic
      - can_see_bank_account_type
      - can_see_comments
      - can_see_corporate_location
      - can_see_image_url
      - can_see_images
      - can_see_more_info
      - can_see_open_corporates_url
      - can_see_other_account_bank_name
      - can_see_other_account_iban
      - can_see_other_account_kind
      - can_see_other_account_metadata
      - can_see_other_account_national_identifier
      - can_see_other_account_number
      - can_see_other_account_swift_bic
      - can_see_owner_comment
      - can_see_physical_location
      - can_see_private_alias
      - can_see_public_alias
      - can_see_tags
      - can_see_transaction_amount
      - can_see_transaction_balance
      - can_see_transaction_currency
      - can_see_transaction_description
      - can_see_transaction_finish_date
      - can_see_transaction_metadata
      - can_see_transaction_other_bank_account
      - can_see_transaction_start_date
      - can_see_transaction_this_bank_account
      - can_see_transaction_type
      - can_see_url
      - can_see_where_tag
    properties:
      can_see_transaction_start_date:
        type: boolean
        example: 'true'
      can_add_url:
        type: boolean
        example: 'true'
      can_add_where_tag:
        type: boolean
        example: 'true'
      can_see_transaction_this_bank_account:
        type: boolean
        example: 'true'
      can_see_bank_account_owners:
        type: boolean
        example: 'true'
      can_see_private_alias:
        type: boolean
        example: 'true'
      can_edit_owner_comment:
        type: boolean
        example: 'true'
      can_see_other_account_national_identifier:
        type: boolean
        example: 'true'
      can_see_public_alias:
        type: boolean
        example: 'true'
      can_see_physical_location:
        type: boolean
        example: 'true'
      can_see_owner_comment:
        type: boolean
        example: 'true'
      can_see_bank_account_iban:
        type: boolean
        example: 'true'
      can_see_corporate_location:
        type: boolean
        example: 'true'
      can_see_bank_account_number:
        type: boolean
        example: 'true'
      can_see_other_account_bank_name:
        type: boolean
        example: 'true'
      description:
        type: string
        example: description
      can_see_transaction_other_bank_account:
        type: boolean
        example: 'true'
      can_delete_corporate_location:
        type: boolean
        example: 'true'
      can_see_comments:
        type: boolean
        example: 'true'
      can_see_bank_account_bank_name:
        type: boolean
        example: 'true'
      can_add_more_info:
        type: boolean
        example: 'true'
      can_see_other_account_number:
        type: boolean
        example: 'true'
      can_see_other_account_swift_bic:
        type: boolean
        example: 'true'
      can_add_open_corporates_url:
        type: boolean
        example: 'true'
      can_see_other_account_kind:
        type: boolean
        example: 'true'
      can_delete_physical_location:
        type: boolean
        example: 'true'
      can_see_bank_account_label:
        type: boolean
        example: 'true'
      can_see_transaction_currency:
        type: boolean
        example: 'true'
      is_public:
        type: boolean
        example: 'true'
      can_see_transaction_finish_date:
        type: boolean
        example: 'true'
      can_add_tag:
        type: boolean
        example: 'true'
      can_see_images:
        type: boolean
        example: 'true'
      can_see_bank_account_currency:
        type: boolean
        example: 'true'
      hide_metadata_if_alias_used:
        type: boolean
        example: 'true'
      can_delete_where_tag:
        type: boolean
        example: 'true'
      alias:
        type: string
        example: None
      can_add_image_url:
        type: boolean
        example: 'true'
      can_add_comment:
        type: boolean
        example: 'true'
      can_see_image_url:
        type: boolean
        example: 'true'
      id:
        type: string
        example: '123'
      can_see_bank_account_national_identifier:
        type: boolean
        example: 'true'
      can_see_tags:
        type: boolean
        example: 'true'
      can_see_open_corporates_url:
        type: boolean
        example: 'true'
      short_name:
        type: string
        example: short_name
      can_delete_tag:
        type: boolean
        example: 'true'
      can_see_more_info:
        type: boolean
        example: 'true'
      can_see_transaction_metadata:
        type: boolean
        example: 'true'
      can_delete_comment:
        type: boolean
        example: 'true'
      can_see_where_tag:
        type: boolean
        example: 'true'
      can_add_private_alias:
        type: boolean
        example: 'true'
      can_add_public_alias:
        type: boolean
        example: 'true'
      can_see_bank_account_swift_bic:
        type: boolean
        example: 'true'
      can_add_image:
        type: boolean
        example: 'true'
      can_see_transaction_type:
        type: boolean
        example: 'true'
      can_see_other_account_iban:
        type: boolean
        example: 'true'
      can_add_physical_location:
        type: boolean
        example: 'true'
      can_add_corporate_location:
        type: boolean
        example: 'true'
      can_delete_image:
        type: boolean
        example: 'true'
      can_see_url:
        type: boolean
        example: 'true'
      can_see_bank_account_balance:
        type: boolean
        example: 'true'
      can_see_transaction_balance:
        type: boolean
        example: 'true'
      can_see_transaction_amount:
        type: boolean
        example: 'true'
      can_see_other_account_metadata:
        type: boolean
        example: 'true'
      can_see_bank_account_type:
        type: boolean
        example: 'true'
      can_see_transaction_description:
        type: boolean
        example: 'true'
  ViewsJSONV121:
    required:
      - views
    properties:
      views:
        type: array
        items:
          $ref: '#/definitions/ViewJSONV121'
  AccountJSON:
    required:
      - id
      - label
      - views_available
      - bank_id
    properties:
      bank_id:
        type: string
        example: gh.uk.db
      views_available:
        type: array
        items:
          $ref: '#/definitions/ViewJSONV121'
      label:
        type: string
        example: OBP
      id:
        type: string
        example: '123'
  AccountsJSON:
    required:
      - accounts
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/AccountJSON'
  BankRoutingJsonV121:
    required:
      - scheme
      - address
    properties:
      address:
        type: string
        example: gh.29.uk
      scheme:
        type: string
        example: Bank_ID
  BankJSON:
    required:
      - id
      - short_name
      - full_name
      - logo
      - website
      - bank_routing
    properties:
      website:
        type: string
        example: www.openbankproject.com
      full_name:
        type: string
        example: full_name
      logo:
        type: string
        example: logo
      id:
        type: string
        example: gh.29.uk
      short_name:
        type: string
        example: 'short_name '
      bank_routing:
        $ref: '#/definitions/BankRoutingJsonV121'
  BanksJSON:
    required:
      - banks
    properties:
      banks:
        type: array
        items:
          $ref: '#/definitions/BankJSON'
  AccountHolderJSON:
    required:
      - name
      - is_alias
    properties:
      is_alias:
        type: boolean
        example: 'true'
      name:
        type: string
        example: OBP
  MinimalBankJSON:
    required:
      - national_identifier
      - name
    properties:
      name:
        type: string
        example: OBP
      national_identifier:
        type: string
        example: OBP
  ModeratedAccountJSON:
    required:
      - id
      - label
      - number
      - owners
      - type
      - balance
      - IBAN
      - swift_bic
      - views_available
      - bank_id
      - account_routing
    properties:
      number:
        type: string
        example: '123'
      account_routing:
        $ref: '#/definitions/AccountRoutingJsonV121'
      views_available:
        type: array
        items:
          $ref: '#/definitions/ViewJSONV121'
      IBAN:
        type: string
        example: DE89 3704 0044 0532 0130 00
      label:
        type: string
        example: NoneLabel
      owners:
        type: array
        items:
          $ref: '#/definitions/UserJSONV121'
      swift_bic:
        type: string
        example: OKOYFIHH
      balance:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      bank_id:
        type: string
        example: gh.29.uk
      id:
        type: string
        example: 5995d6a2-01b3-423c-a173-5481df49bdaf
      type:
        type: string
        example: OBP
  ThisAccountJSON:
    required:
      - id
      - holders
      - number
      - kind
      - IBAN
      - swift_bic
      - bank
    properties:
      number:
        type: string
        example: '123'
      IBAN:
        type: string
        example: UK1234AD
      swift_bic:
        type: string
        example: UK1234AD
      bank:
        $ref: '#/definitions/MinimalBankJSON'
      id:
        type: string
        example: 5995d6a2-01b3-423c-a173-5481df49bdaf
      holders:
        type: array
        items:
          $ref: '#/definitions/AccountHolderJSON'
      kind:
        type: string
        example: AC
  LocationJSONV121:
    required:
      - latitude
      - longitude
      - date
      - user
    properties:
      user:
        $ref: '#/definitions/UserJSONV121'
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      longitude:
        type: number
        format: double
        example: '1.231'
      latitude:
        type: number
        format: double
        example: '1.231'
  OtherAccountMetadataJSON:
    required:
      - public_alias
      - private_alias
      - more_info
      - URL
      - image_URL
      - open_corporates_URL
      - corporate_location
      - physical_location
    properties:
      public_alias:
        type: string
        example: NONE
      image_URL:
        type: string
        example: www.openbankproject.com
      physical_location:
        $ref: '#/definitions/LocationJSONV121'
      private_alias:
        type: string
        example: NONE
      URL:
        type: string
        example: www.openbankproject.com
      more_info:
        type: string
        example: www.openbankproject.com
      corporate_location:
        $ref: '#/definitions/LocationJSONV121'
      open_corporates_URL:
        type: string
        example: www.openbankproject.com
  OtherAccountJSON:
    required:
      - id
      - holder
      - number
      - kind
      - IBAN
      - swift_bic
      - bank
      - metadata
    properties:
      number:
        type: string
        example: '123'
      IBAN:
        type: string
        example: UK234DB
      swift_bic:
        type: string
        example: UK12321DB
      holder:
        $ref: '#/definitions/AccountHolderJSON'
      bank:
        $ref: '#/definitions/MinimalBankJSON'
      id:
        type: string
        example: 5995d6a2-01b3-423c-a173-5481df49bdaf
      metadata:
        $ref: '#/definitions/OtherAccountMetadataJSON'
      kind:
        type: string
        example: '3456'
  TransactionDetailsJSON:
    required:
      - type
      - description
      - posted
      - completed
      - new_balance
      - value
    properties:
      new_balance:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      description:
        type: string
        example: GOOD
      completed:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      type:
        type: string
        example: AC
      value:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      posted:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
  TransactionImageJSON:
    required:
      - id
      - label
      - URL
      - date
      - user
    properties:
      URL:
        type: string
        example: www.openbankproject.com
      label:
        type: string
        example: NONE
      id:
        type: string
        example: 5995d6a2-01b3-423c-a173-5481df49bdaf
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      user:
        $ref: '#/definitions/UserJSONV121'
  TransactionImagesJSON:
    required:
      - images
    properties:
      images:
        type: array
        items:
          $ref: '#/definitions/TransactionImageJSON'
  TransactionCommentJSON:
    required:
      - id
      - value
      - date
      - user
    properties:
      user:
        $ref: '#/definitions/UserJSONV121'
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      value:
        type: string
        example: OBP
      id:
        type: string
        example: 5995d6a2-01b3-423c-a173-5481df49bdaf
  TransactionTagJSON:
    required:
      - id
      - value
      - date
      - user
    properties:
      user:
        $ref: '#/definitions/UserJSONV121'
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      value:
        type: string
        example: OBP
      id:
        type: string
        example: 5995d6a2-01b3-423c-a173-5481df49bdaf
  TransactionTagsJSON:
    required:
      - tags
    properties:
      tags:
        type: array
        items:
          $ref: '#/definitions/TransactionTagJSON'
  TransactionMetadataJSON:
    required:
      - narrative
      - comments
      - tags
      - images
      - where
    properties:
      narrative:
        type: string
        example: NONE
      tags:
        type: array
        items:
          $ref: '#/definitions/TransactionTagJSON'
      where:
        $ref: '#/definitions/LocationJSONV121'
      images:
        type: array
        items:
          $ref: '#/definitions/TransactionImageJSON'
      comments:
        type: array
        items:
          $ref: '#/definitions/TransactionCommentJSON'
  TransactionJSON:
    required:
      - id
      - this_account
      - other_account
      - details
      - metadata
    properties:
      this_account:
        $ref: '#/definitions/ThisAccountJSON'
      id:
        type: string
        example: 5995d6a2-01b3-423c-a173-5481df49bdaf
      details:
        $ref: '#/definitions/TransactionDetailsJSON'
      metadata:
        $ref: '#/definitions/TransactionMetadataJSON'
      other_account:
        $ref: '#/definitions/OtherAccountJSON'
  TransactionsJSON:
    required:
      - transactions
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionJSON'
  SuccessMessage:
    required:
      - success
    properties:
      success:
        type: string
        example: Success
  OtherAccountsJSON:
    required:
      - other_accounts
    properties:
      other_accounts:
        type: array
        items:
          $ref: '#/definitions/OtherAccountJSON'
  TransactionCommentsJSON:
    required:
      - comments
    properties:
      comments:
        type: array
        items:
          $ref: '#/definitions/TransactionCommentJSON'
  TransactionWhereJSON:
    required:
      - where
    properties:
      where:
        $ref: '#/definitions/LocationJSONV121'
  PermissionJSON:
    required:
      - user
      - views
    properties:
      views:
        type: array
        items:
          $ref: '#/definitions/ViewJSONV121'
      user:
        $ref: '#/definitions/UserJSONV121'
  PermissionsJSON:
    required:
      - permissions
    properties:
      permissions:
        type: array
        items:
          $ref: '#/definitions/PermissionJSON'
  LocationPlainJSON:
    required:
      - latitude
      - longitude
    properties:
      longitude:
        type: number
        format: double
        example: '1.535'
      latitude:
        type: number
        format: double
        example: '1.532'
  PinResetJSON:
    required:
      - requested_date
      - reason_requested
    properties:
      reason_requested:
        type: string
        example: forgot
      requested_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
  ReplacementJSON:
    required:
      - requested_date
      - reason_requested
    properties:
      reason_requested:
        type: string
        example: Good Point
      requested_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
  PhysicalCardJSON:
    required:
      - bank_id
      - bank_card_number
      - name_on_card
      - issue_number
      - serial_number
      - valid_from_date
      - expires_date
      - enabled
      - cancelled
      - on_hot_list
      - technology
      - networks
      - allows
      - account
      - replacement
      - pin_reset
      - collected
      - posted
    properties:
      allows:
        type: array
        items:
          type: string
      expires_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      networks:
        type: array
        items:
          type: string
      issue_number:
        type: string
        example: String
      replacement:
        $ref: '#/definitions/ReplacementJSON'
      enabled:
        type: boolean
        example: 'true'
      collected:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      technology:
        type: string
        example: String
      cancelled:
        type: boolean
        example: 'true'
      bank_id:
        type: string
        example: String
      pin_reset:
        type: array
        items:
          $ref: '#/definitions/PinResetJSON'
      serial_number:
        type: string
        example: String
      account:
        $ref: '#/definitions/AccountJSON'
      valid_from_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      bank_card_number:
        type: string
        example: String
      name_on_card:
        type: string
        example: String
      posted:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      on_hot_list:
        type: boolean
        example: 'true'
  PhysicalCardsJSON:
    required:
      - cards
    properties:
      cards:
        type: array
        items:
          $ref: '#/definitions/PhysicalCardJSON'
  PostPhysicalCardJSON:
    required:
      - bank_card_number
      - name_on_card
      - issue_number
      - serial_number
      - valid_from_date
      - expires_date
      - enabled
      - cancelled
      - on_hot_list
      - technology
      - networks
      - allows
      - account_id
      - replacement
      - pin_reset
      - collected
      - posted
    properties:
      allows:
        type: array
        items:
          type: string
      expires_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      networks:
        type: array
        items:
          type: string
      issue_number:
        type: string
        example: String
      replacement:
        $ref: '#/definitions/ReplacementJSON'
      enabled:
        type: boolean
        example: 'true'
      collected:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      technology:
        type: string
        example: String
      cancelled:
        type: boolean
        example: 'true'
      account_id:
        type: string
        example: String
      pin_reset:
        type: array
        items:
          $ref: '#/definitions/PinResetJSON'
      serial_number:
        type: string
        example: String
      valid_from_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      bank_card_number:
        type: string
        example: String
      name_on_card:
        type: string
        example: String
      posted:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      on_hot_list:
        type: boolean
        example: 'true'
  CustomerFaceImageJson:
    required:
      - url
      - date
    properties:
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      url:
        type: string
        example: www.openbankproject
  LocationJsonV140:
    required:
      - latitude
      - longitude
    properties:
      longitude:
        type: number
        format: double
        example: '11.45'
      latitude:
        type: number
        format: double
        example: '11.45'
  TransactionRequestChargeJsonV140:
    required:
      - summary
      - value
    properties:
      value:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      summary:
        type: string
        example: Good
  TransactionRequestTypeJsonV140:
    required:
      - value
      - charge
    properties:
      charge:
        $ref: '#/definitions/TransactionRequestChargeJsonV140'
      value:
        type: string
        example: '10'
  TransactionRequestTypesJsonV140:
    required:
      - transaction_request_types
    properties:
      transaction_request_types:
        type: array
        items:
          $ref: '#/definitions/TransactionRequestTypeJsonV140'
  TransactionRequestAccountJsonV140:
    required:
      - bank_id
      - account_id
    properties:
      account_id:
        type: string
        example: 8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0
      bank_id:
        type: string
        example: gh.29.uk
  ChallengeJsonV140:
    required:
      - id
      - allowed_attempts
      - challenge_type
    properties:
      challenge_type:
        type: string
        example: SANDBOX_TAN
      allowed_attempts:
        type: integer
        format: int32
        example: '3'
      id:
        type: string
        example: be1a183d-b301-4b83-b855-5eeffdd3526f
  DriveUpStringJson:
    required:
      - hours
    properties:
      hours:
        type: string
        example: '5'
  LicenseJsonV140:
    required:
      - id
      - name
    properties:
      name:
        type: string
        example: TESOBE
      id:
        type: string
        example: '5'
  MetaJsonV140:
    required:
      - license
    properties:
      license:
        $ref: '#/definitions/LicenseJsonV140'
  LobbyStringJson:
    required:
      - hours
    properties:
      hours:
        type: string
        example: '5'
  AddressJsonV140:
    required:
      - line_1
      - line_2
      - line_3
      - city
      - state
      - postcode
      - country
    properties:
      city:
        type: string
        example: Berlin
      line_2:
        type: string
        example: Wedding
      state:
        type: string
        example: Berlin Brandenburg
      postcode:
        type: string
        example: '13359'
      country:
        type: string
        example: DE
      line_3:
        type: string
        example: ''
      line_1:
        type: string
        example: Osloer Straße 16/17
  PostCustomerJson:
    required:
      - customer_number
      - legal_name
      - mobile_phone_number
      - email
      - face_image
      - date_of_birth
      - relationship_status
      - dependants
      - dob_of_dependants
      - highest_education_attained
      - employment_status
      - kyc_status
      - last_ok_date
    properties:
      email:
        type: string
        example: String
      mobile_phone_number:
        type: string
        example: String
      customer_number:
        type: string
        example: String
      highest_education_attained:
        type: string
        example: String
      dob_of_dependants:
        type: array
        items:
          type: string
          format: date
      date_of_birth:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      last_ok_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      employment_status:
        type: string
        example: String
      legal_name:
        type: string
        example: String
      face_image:
        $ref: '#/definitions/CustomerFaceImageJson'
      dependants:
        type: integer
        format: int32
        example: '1'
      relationship_status:
        type: string
        example: String
      kyc_status:
        type: boolean
        example: 'true'
  CustomerJsonV140:
    required:
      - customer_id
      - customer_number
      - legal_name
      - mobile_phone_number
      - email
      - face_image
      - date_of_birth
      - relationship_status
      - dependants
      - dob_of_dependants
      - highest_education_attained
      - employment_status
      - kyc_status
      - last_ok_date
    properties:
      customer_id:
        type: string
        example: String
      email:
        type: string
        example: String
      mobile_phone_number:
        type: string
        example: String
      customer_number:
        type: string
        example: String
      highest_education_attained:
        type: string
        example: String
      dob_of_dependants:
        type: array
        items:
          type: string
          format: date
      date_of_birth:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      last_ok_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      employment_status:
        type: string
        example: String
      legal_name:
        type: string
        example: String
      face_image:
        $ref: '#/definitions/CustomerFaceImageJson'
      dependants:
        type: integer
        format: int32
        example: '10'
      relationship_status:
        type: string
        example: String
      kyc_status:
        type: boolean
        example: 'true'
  CustomersJsonV140:
    required:
      - customers
    properties:
      customers:
        type: array
        items:
          $ref: '#/definitions/CustomerJsonV140'
  CustomerMessageJson:
    required:
      - id
      - date
      - message
      - from_department
      - from_person
    properties:
      from_person:
        type: string
        example: String
      id:
        type: string
        example: String
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      from_department:
        type: string
        example: String
      message:
        type: string
        example: String
  CustomerMessagesJson:
    required:
      - messages
    properties:
      messages:
        type: array
        items:
          $ref: '#/definitions/CustomerMessageJson'
  BranchRoutingJsonV141:
    required:
      - scheme
      - address
    properties:
      address:
        type: string
        example: String
      scheme:
        type: string
        example: String
  BranchJson:
    required:
      - id
      - name
      - address
      - location
      - lobby
      - drive_up
      - meta
      - branch_routing
    properties:
      name:
        type: string
        example: String
      location:
        $ref: '#/definitions/LocationJsonV140'
      branch_routing:
        $ref: '#/definitions/BranchRoutingJsonV141'
      drive_up:
        $ref: '#/definitions/DriveUpStringJson'
      id:
        type: string
        example: String
      meta:
        $ref: '#/definitions/MetaJsonV140'
      lobby:
        $ref: '#/definitions/LobbyStringJson'
      address:
        $ref: '#/definitions/AddressJsonV140'
  BranchesJson:
    required:
      - branches
    properties:
      branches:
        type: array
        items:
          $ref: '#/definitions/BranchJson'
  Meta:
    required:
      - license
    properties:
      license:
        $ref: '#/definitions/License'
  OpeningTimesV300:
    required:
      - opening_time
      - closing_time
    properties:
      closing_time:
        type: string
        example: '18:00'
      opening_time:
        type: string
        example: '10:00'
  OpeningTimes:
    required:
      - openingTime
      - closingTime
    properties:
      closingTime:
        type: string
        example: '18:00'
      openingTime:
        type: string
        example: '10:00'
  Address:
    required:
      - line1
      - line2
      - line3
      - city
      - state
      - postCode
      - countryCode
    properties:
      city:
        type: string
        example: Berlin
      postCode:
        type: string
        example: '13359'
      state:
        type: string
        example: Brandenburg
      line1:
        type: string
        example: No 1 the Road
      county:
        type: string
        example: String
      countryCode:
        type: string
        example: DE
      line2:
        type: string
        example: The Place
      line3:
        type: string
        example: The Hill
  Lobby:
    required:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
    properties:
      sunday:
        $ref: '#/definitions/OpeningTimes'
      tuesday:
        $ref: '#/definitions/OpeningTimes'
      wednesday:
        $ref: '#/definitions/OpeningTimes'
      monday:
        $ref: '#/definitions/OpeningTimes'
      friday:
        $ref: '#/definitions/OpeningTimes'
      thursday:
        $ref: '#/definitions/OpeningTimes'
      saturday:
        $ref: '#/definitions/OpeningTimes'
  DriveUp:
    required:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
    properties:
      sunday:
        $ref: '#/definitions/OpeningTimes'
      tuesday:
        $ref: '#/definitions/OpeningTimes'
      wednesday:
        $ref: '#/definitions/OpeningTimes'
      monday:
        $ref: '#/definitions/OpeningTimes'
      friday:
        $ref: '#/definitions/OpeningTimes'
      thursday:
        $ref: '#/definitions/OpeningTimes'
      saturday:
        $ref: '#/definitions/OpeningTimes'
  BasicResourceUser:
    required:
      - userId
      - provider
      - username
    properties:
      username:
        type: string
        example: ' String'
      provider:
        type: string
        example: ' String'
      userId:
        type: string
        example: String
  Location:
    required:
      - latitude
      - longitude
    properties:
      user:
        $ref: '#/definitions/BasicResourceUser'
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      longitude:
        type: number
        format: double
        example: '10.0'
      latitude:
        type: number
        format: double
        example: '10.0'
  LobbyString:
    required:
      - hours
    properties:
      hours:
        type: string
        example: 'String '
  DriveUpString:
    required:
      - hours
    properties:
      hours:
        type: string
        example: 'String '
  Branch:
    required:
      - branchId
      - bankId
      - name
      - address
      - location
      - meta
    properties:
      name:
        type: string
        example: Branch by the Lake
      location:
        $ref: '#/definitions/Location'
      phoneNumber:
        type: string
        example: '+381631954907'
      driveUp:
        $ref: '#/definitions/DriveUp'
      isAccessible:
        type: boolean
        example: 'true'
      branchId:
        $ref: '#/definitions/BranchId'
      meta:
        $ref: '#/definitions/Meta'
      moreInfo:
        type: string
        example: short walk to the lake from here
      lobbyString:
        $ref: '#/definitions/LobbyString'
      lobby:
        $ref: '#/definitions/Lobby'
      address:
        $ref: '#/definitions/Address'
      bankId:
        $ref: '#/definitions/BankId'
      branchType:
        type: string
        example: Full service store
      branchRouting:
        $ref: '#/definitions/Routing'
      driveUpString:
        $ref: '#/definitions/DriveUpString'
  LobbyJsonV330:
    required:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
    properties:
      sunday:
        $ref: '#/definitions/OpeningTimesV300'
      tuesday:
        $ref: '#/definitions/OpeningTimesV300'
      wednesday:
        $ref: '#/definitions/OpeningTimesV300'
      monday:
        $ref: '#/definitions/OpeningTimesV300'
      friday:
        $ref: '#/definitions/OpeningTimesV300'
      thursday:
        $ref: '#/definitions/OpeningTimesV300'
      saturday:
        $ref: '#/definitions/OpeningTimesV300'
  DriveUpJsonV330:
    required:
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
    properties:
      sunday:
        $ref: '#/definitions/OpeningTimesV300'
      tuesday:
        $ref: '#/definitions/OpeningTimesV300'
      wednesday:
        $ref: '#/definitions/OpeningTimesV300'
      monday:
        $ref: '#/definitions/OpeningTimesV300'
      friday:
        $ref: '#/definitions/OpeningTimesV300'
      thursday:
        $ref: '#/definitions/OpeningTimesV300'
      saturday:
        $ref: '#/definitions/OpeningTimesV300'
  BranchJsonV300:
    required:
      - id
      - bank_id
      - name
      - address
      - location
      - meta
      - lobby
      - drive_up
      - branch_routing
      - is_accessible
      - branch_type
      - more_info
      - phone_number
    properties:
      name:
        type: string
        example: Branch by the Lake
      phone_number:
        type: string
        example: '+381631954907'
      location:
        $ref: '#/definitions/LocationJsonV140'
      branch_type:
        type: string
        example: Full service store
      branch_routing:
        $ref: '#/definitions/BranchRoutingJsonV141'
      drive_up:
        $ref: '#/definitions/DriveUpJsonV330'
      more_info:
        type: string
        example: short walk to the lake from here
      bank_id:
        type: string
        example: bank-id-123
      id:
        type: string
        example: branch-id-123
      meta:
        $ref: '#/definitions/MetaJsonV140'
      lobby:
        $ref: '#/definitions/LobbyJsonV330'
      address:
        $ref: '#/definitions/AddressJsonV300'
      is_accessible:
        type: string
        example: 'true'
  BranchesJsonV300:
    required:
      - branches
    properties:
      branches:
        type: array
        items:
          $ref: '#/definitions/BranchJsonV300'
  AtmJson:
    required:
      - id
      - name
      - address
      - location
      - meta
    properties:
      name:
        type: string
        example: String
      location:
        $ref: '#/definitions/LocationJsonV140'
      id:
        type: string
        example: String
      meta:
        $ref: '#/definitions/MetaJsonV140'
      address:
        $ref: '#/definitions/AddressJsonV140'
  AtmsJson:
    required:
      - atms
    properties:
      atms:
        type: array
        items:
          $ref: '#/definitions/AtmJson'
  AddressJsonV300:
    required:
      - line_1
      - line_2
      - line_3
      - city
      - county
      - state
      - postcode
      - country_code
    properties:
      city:
        type: string
        example: Berlin
      line_2:
        type: string
        example: The Place
      state:
        type: string
        example: Brandenburg
      postcode:
        type: string
        example: '13359'
      county:
        type: string
        example: ''
      country_code:
        type: string
        example: DE
      line_3:
        type: string
        example: The Hill
      line_1:
        type: string
        example: No 1 the Road
  AtmJsonV300:
    required:
      - id
      - bank_id
      - name
      - address
      - location
      - meta
      - monday
      - tuesday
      - wednesday
      - thursday
      - friday
      - saturday
      - sunday
      - is_accessible
      - located_at
      - more_info
      - has_deposit_capability
    properties:
      sunday:
        $ref: '#/definitions/OpeningTimesV300'
      name:
        type: string
        example: Atm by the Lake
      location:
        $ref: '#/definitions/LocationJsonV140'
      tuesday:
        $ref: '#/definitions/OpeningTimesV300'
      wednesday:
        $ref: '#/definitions/OpeningTimesV300'
      monday:
        $ref: '#/definitions/OpeningTimesV300'
      has_deposit_capability:
        type: string
        example: 'true'
      more_info:
        type: string
        example: short walk to the lake from here
      bank_id:
        type: string
        example: bank-id-123
      id:
        type: string
        example: atm-id-123
      meta:
        $ref: '#/definitions/MetaJsonV140'
      address:
        $ref: '#/definitions/AddressJsonV300'
      friday:
        $ref: '#/definitions/OpeningTimesV300'
      is_accessible:
        type: string
        example: 'true'
      thursday:
        $ref: '#/definitions/OpeningTimesV300'
      saturday:
        $ref: '#/definitions/OpeningTimesV300'
      located_at:
        type: string
        example: Full service store
  ProductJson:
    required:
      - code
      - name
      - category
      - family
      - super_family
      - more_info_url
      - meta
    properties:
      name:
        type: string
        example: String
      more_info_url:
        type: string
        example: String
      super_family:
        type: string
        example: String
      code:
        type: string
        example: String
      meta:
        $ref: '#/definitions/MetaJsonV140'
      category:
        type: string
        example: String
      family:
        type: string
        example: String
  ProductsJson:
    required:
      - products
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/ProductJson'
  CrmEventJson:
    required:
      - id
      - bank_id
      - customer_name
      - customer_number
      - category
      - detail
      - channel
      - scheduled_date
      - actual_date
      - result
    properties:
      channel:
        type: string
        example: String
      customer_name:
        type: string
        example: String
      result:
        type: string
        example: String
      customer_number:
        type: string
        example: String
      bank_id:
        type: string
        example: String
      id:
        type: string
        example: String
      scheduled_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      category:
        type: string
        example: String
      detail:
        type: string
        example: String
      actual_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
  CrmEventsJson:
    required:
      - crm_events
    properties:
      crm_events:
        type: array
        items:
          $ref: '#/definitions/CrmEventJson'
  ImplementedByJson:
    required:
      - version
      - function
    properties:
      function:
        type: string
        example: getBranches
      version:
        type: string
        example: '1_4_0'
  ResourceDocJson:
    required:
      - operation_id
      - implemented_by
      - request_verb
      - request_url
      - summary
      - description
      - example_request_body
      - success_response_body
      - error_response_bodies
      - is_core
      - is_psd2
      - is_obwg
      - tags
    properties:
      error_response_bodies:
        type: array
        items:
          type: string
      request_verb:
        type: string
        example: String
      request_url:
        type: string
        example: String
      description:
        type: string
        example: String
      tags:
        type: array
        items:
          type: string
      is_core:
        type: boolean
        example: 'true'
      success_response_body:
        $ref: '#/definitions/SuccessMessage'
      example_request_body:
        $ref: '#/definitions/SuccessMessage'
      is_psd2:
        type: boolean
        example: 'true'
      operation_id:
        type: string
        example: String
      implemented_by:
        $ref: '#/definitions/ImplementedByJson'
      is_obwg:
        type: boolean
        example: 'true'
      summary:
        type: string
        example: String
  ResourceDocsJson:
    required:
      - resource_docs
    properties:
      resource_docs:
        type: array
        items:
          $ref: '#/definitions/ResourceDocJson'
  TransactionRequestBodyJsonV140:
    required:
      - to
      - value
      - description
      - challenge_type
    properties:
      challenge_type:
        type: string
        example: String
      description:
        type: string
        example: String
      value:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      to:
        $ref: '#/definitions/TransactionRequestAccountJsonV140'
  TransactionRequestJsonV140:
    required:
      - id
      - type
      - from
      - body
      - transaction_ids
      - status
      - start_date
      - end_date
      - challenge
    properties:
      body:
        $ref: '#/definitions/TransactionRequestBodyJsonV140'
      challenge:
        $ref: '#/definitions/ChallengeJsonV140'
      start_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      id:
        type: string
        example: String
      end_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      status:
        type: string
        example: String
      from:
        $ref: '#/definitions/TransactionRequestAccountJsonV140'
      type:
        type: string
        example: String
      transaction_ids:
        type: string
        example: String
  BasicViewJson:
    required:
      - id
      - short_name
      - is_public
    properties:
      is_public:
        type: boolean
        example: 'true'
      short_name:
        type: string
        example: HHH
      id:
        type: string
        example: '1'
  BasicAccountJSON:
    required:
      - id
      - label
      - bank_id
      - views_available
    properties:
      views_available:
        type: array
        items:
          $ref: '#/definitions/BasicViewJson'
      bank_id:
        type: string
        example: gh.29.uk
      label:
        type: string
        example: NoneLabel
      id:
        type: string
        example: 8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0
  CoreAccountJSON:
    required:
      - id
      - label
      - bank_id
      - _links
    properties:
      _links:
        type: string
        example: ''
      bank_id:
        type: string
        example: gh.29.uk
      label:
        type: string
        example: NoneLabel
      id:
        type: string
        example: 8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0
  ModeratedCoreAccountJSON:
    required:
      - id
      - label
      - number
      - owners
      - type
      - balance
      - IBAN
      - swift_bic
      - bank_id
      - account_routing
    properties:
      number:
        type: string
        example: '123'
      account_routing:
        $ref: '#/definitions/AccountRoutingJsonV121'
      IBAN:
        type: string
        example: GR1301720530005053000582373
      label:
        type: string
        example: NoneLabel
      owners:
        type: array
        items:
          $ref: '#/definitions/UserJSONV121'
      swift_bic:
        type: string
        example: UKTF3049auf
      balance:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      bank_id:
        type: string
        example: gh.29.uk
      id:
        type: string
        example: 8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0
      type:
        type: string
        example: OBP
  BasicAccountsJSON:
    required:
      - accounts
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/BasicAccountJSON'
  CoreAccountsJSON:
    required:
      - accounts
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/CoreAccountJSON'
  KycDocumentJSON:
    required:
      - bank_id
      - customer_id
      - id
      - customer_number
      - type
      - number
      - issue_date
      - issue_place
      - expiry_date
    properties:
      number:
        type: string
        example: PlaceholderString
      customer_id:
        type: string
        example: PlaceholderString
      customer_number:
        type: string
        example: PlaceholderString
      issue_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      bank_id:
        type: string
        example: PlaceholderString
      id:
        type: string
        example: PlaceholderString
      type:
        type: string
        example: PlaceholderString
      issue_place:
        type: string
        example: PlaceholderString
      expiry_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
  KycDocumentsJSON:
    required:
      - documents
    properties:
      documents:
        type: array
        items:
          $ref: '#/definitions/KycDocumentJSON'
  KycMediaJSON:
    required:
      - bank_id
      - customer_id
      - id
      - customer_number
      - type
      - url
      - date
      - relates_to_kyc_document_id
      - relates_to_kyc_check_id
    properties:
      customer_id:
        type: string
        example: PlaceholderString
      url:
        type: string
        example: PlaceholderString
      customer_number:
        type: string
        example: PlaceholderString
      bank_id:
        type: string
        example: PlaceholderString
      id:
        type: string
        example: PlaceholderString
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      relates_to_kyc_document_id:
        type: string
        example: PlaceholderString
      relates_to_kyc_check_id:
        type: string
        example: PlaceholderString
      type:
        type: string
        example: PlaceholderString
  KycMediasJSON:
    required:
      - medias
    properties:
      medias:
        type: array
        items:
          $ref: '#/definitions/KycMediaJSON'
  KycCheckJSON:
    required:
      - bank_id
      - customer_id
      - id
      - customer_number
      - date
      - how
      - staff_user_id
      - staff_name
      - satisfied
      - comments
    properties:
      customer_id:
        type: string
        example: PlaceholderString
      customer_number:
        type: string
        example: PlaceholderString
      bank_id:
        type: string
        example: PlaceholderString
      id:
        type: string
        example: PlaceholderString
      how:
        type: string
        example: PlaceholderString
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      satisfied:
        type: boolean
        example: 'true'
      staff_user_id:
        type: string
        example: PlaceholderString
      staff_name:
        type: string
        example: PlaceholderString
      comments:
        type: string
        example: PlaceholderString
  KycChecksJSON:
    required:
      - checks
    properties:
      checks:
        type: array
        items:
          $ref: '#/definitions/KycCheckJSON'
  KycStatusJSON:
    required:
      - customer_id
      - customer_number
      - ok
      - date
    properties:
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      ok:
        type: boolean
        example: 'true'
      customer_number:
        type: string
        example: PlaceholderString
      customer_id:
        type: string
        example: PlaceholderString
  KycStatusesJSON:
    required:
      - statuses
    properties:
      statuses:
        type: array
        items:
          $ref: '#/definitions/KycStatusJSON'
  SocialMediasJSON:
    required:
      - checks
    properties:
      checks:
        type: array
        items:
          $ref: '#/definitions/SocialMediaJSON'
  EntitlementJSON:
    required:
      - entitlement_id
      - role_name
      - bank_id
    properties:
      bank_id:
        type: string
        example: gh.29.uk
      role_name:
        type: string
        example: CanQueryOtherUser
      entitlement_id:
        type: string
        example: 6fb17583-1e49-4435-bb74-a14fe0996723
  EntitlementJSONs:
    required:
      - list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/EntitlementJSON'
  UserJsonV200:
    required:
      - user_id
      - email
      - provider_id
      - provider
      - username
      - entitlements
    properties:
      provider:
        type: string
        example: OBP
      email:
        type: string
        example: robert.x.0.gh@example.com
      username:
        type: string
        example: robert.x.0.gh
      provider_id:
        type: string
        example: OBP
      user_id:
        type: string
        example: 5995d6a2-01b3-423c-a173-5481df49bdaf
      entitlements:
        $ref: '#/definitions/EntitlementJSONs'
  CoreTransactionDetailsJSON:
    required:
      - type
      - description
      - posted
      - completed
      - new_balance
      - value
    properties:
      new_balance:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      description:
        type: string
        example: OBP
      completed:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      type:
        type: string
        example: AC
      value:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      posted:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
  CoreAccountHolderJSON:
    required:
      - name
    properties:
      name:
        type: string
        example: ZACK
  CoreCounterpartyJSON:
    required:
      - id
      - holder
      - number
      - kind
      - IBAN
      - swift_bic
      - bank
    properties:
      number:
        type: string
        example: '1234'
      IBAN:
        type: string
        example: UK12344DB
      swift_bic:
        type: string
        example: UK12344DB
      holder:
        $ref: '#/definitions/CoreAccountHolderJSON'
      bank:
        $ref: '#/definitions/MinimalBankJSON'
      id:
        type: string
        example: '123'
      kind:
        type: string
        example: AV
  CoreTransactionJSON:
    required:
      - id
      - account
      - counterparty
      - details
    properties:
      details:
        $ref: '#/definitions/CoreTransactionDetailsJSON'
      counterparty:
        $ref: '#/definitions/CoreCounterpartyJSON'
      account:
        $ref: '#/definitions/ThisAccountJSON'
      id:
        type: string
        example: '123'
  CoreTransactionsJSON:
    required:
      - transactions
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/CoreTransactionJSON'
  TransactionRequestChargeJsonV200:
    required:
      - summary
      - value
    properties:
      value:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      summary:
        type: string
        example: Good
  TransactionRequestWithChargeJson:
    required:
      - id
      - type
      - from
      - details
      - transaction_ids
      - status
      - start_date
      - end_date
      - challenge
      - charge
    properties:
      challenge:
        $ref: '#/definitions/ChallengeJsonV140'
      start_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      id:
        type: string
        example: 82f92531-9c63-4246-abfc-96c20ec46188
      end_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      status:
        type: string
        example: COMPLETED
      from:
        $ref: '#/definitions/TransactionRequestAccountJsonV140'
      details:
        type: string
        example: ''
      charge:
        $ref: '#/definitions/TransactionRequestChargeJsonV200'
      type:
        type: string
        example: SANDBOX_TAN
      transaction_ids:
        type: string
        example: 666666-9c63-4246-abfc-96c20ec46188
  TransactionTypeJsonV200:
    required:
      - id
      - bank_id
      - short_code
      - summary
      - description
      - charge
    properties:
      description:
        type: string
        example: PlaceholderString
      short_code:
        type: string
        example: PlaceholderString
      bank_id:
        type: string
        example: PlaceholderString
      id:
        $ref: '#/definitions/TransactionTypeId'
      charge:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      summary:
        type: string
        example: PlaceholderString
  TransactionTypesJsonV200:
    required:
      - transaction_types
    properties:
      transaction_types:
        type: array
        items:
          $ref: '#/definitions/TransactionTypeJsonV200'
  LinkJson:
    required:
      - href
      - rel
      - method
    properties:
      method:
        type: string
        example: String
      rel:
        type: string
        example: String
      href:
        type: string
        example: String
  LinksJson:
    required:
      - _links
    properties:
      _links:
        type: array
        items:
          $ref: '#/definitions/LinkJson'
  ResultAndLinksJson:
    required:
      - result
      - links
    properties:
      links:
        $ref: '#/definitions/LinksJson'
      result:
        type: string
        example: ''
  CreateUsersJson:
    required:
      - users
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/CreateUserJson'
  MeetingKeysJson:
    required:
      - session_id
      - staff_token
      - customer_token
    properties:
      customer_token:
        type: string
        example: String
      staff_token:
        type: string
        example: String
      session_id:
        type: string
        example: String
  MeetingPresentJson:
    required:
      - staff_user_id
      - customer_user_id
    properties:
      customer_user_id:
        type: string
        example: String
      staff_user_id:
        type: string
        example: String
  MeetingJson:
    required:
      - meeting_id
      - provider_id
      - purpose_id
      - bank_id
      - present
      - keys
      - when
    properties:
      present:
        $ref: '#/definitions/MeetingPresentJson'
      provider_id:
        type: string
        example: String
      bank_id:
        type: string
        example: String
      purpose_id:
        type: string
        example: String
      when:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      meeting_id:
        type: string
        example: String
      keys:
        $ref: '#/definitions/MeetingKeysJson'
  MeetingsJson:
    required:
      - meetings
    properties:
      meetings:
        type: array
        items:
          $ref: '#/definitions/MeetingJson'
  UserCustomerLinkJson:
    required:
      - user_customer_link_id
      - customer_id
      - user_id
      - date_inserted
      - is_active
    properties:
      is_active:
        type: boolean
        example: 'true'
      customer_id:
        type: string
        example: String
      user_id:
        type: string
        example: String
      date_inserted:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      user_customer_link_id:
        type: string
        example: String
  UserCustomerLinksJson:
    required:
      - l
    properties:
      l:
        type: array
        items:
          $ref: '#/definitions/UserCustomerLinkJson'
  TransactionRequestJsonV200:
    required:
      - id
      - type
      - from
      - body
      - transaction_ids
      - status
      - start_date
      - end_date
      - challenge
    properties:
      body:
        $ref: '#/definitions/TransactionRequestBodyJsonV200'
      challenge:
        $ref: '#/definitions/ChallengeJsonV140'
      start_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      id:
        type: string
        example: String
      end_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      status:
        type: string
        example: String
      from:
        $ref: '#/definitions/TransactionRequestAccountJsonV140'
      type:
        type: string
        example: String
      transaction_ids:
        type: string
        example: String
  TransactionRequestWithChargesJson:
    required:
      - transaction_requests_with_charges
    properties:
      transaction_requests_with_charges:
        type: array
        items:
          $ref: '#/definitions/TransactionRequestWithChargeJson'
  UsersJsonV200:
    required:
      - users
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/UserJsonV200'
  CounterpartiesJSON:
    required:
      - counterparties
    properties:
      counterparties:
        type: array
        items:
          $ref: '#/definitions/CoreCounterpartyJSON'
  CounterpartyIdJson:
    required:
      - counterparty_id
    properties:
      counterparty_id:
        type: string
        example: '123456'
  IbanJson:
    required:
      - iban
    properties:
      iban:
        type: string
        example: '123'
  MetricJson:
    required:
      - user_id
      - url
      - date
      - user_name
      - app_name
      - developer_email
      - implemented_by_partial_function
      - implemented_in_version
      - consumer_id
      - verb
    properties:
      implemented_in_version:
        type: string
        example: v210
      url:
        type: string
        example: www.openbankproject.com
      implemented_by_partial_function:
        type: string
        example: getBanks
      user_id:
        type: string
        example: '134'
      developer_email:
        type: string
        example: contact@tesobe.ocm
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      consumer_id:
        type: string
        example: '123'
      verb:
        type: string
        example: get
      app_name:
        type: string
        example: SOFI
      user_name:
        type: string
        example: OBP
  ResourceUserJSON:
    required:
      - user_id
      - email
      - provider_id
      - provider
      - username
    properties:
      provider:
        type: string
        example: obp
      email:
        type: string
        example: contact@tesobe.com
      username:
        type: string
        example: TESOBE
      provider_id:
        type: string
        example: obp
      user_id:
        type: string
        example: '123'
  AvailableRoleJSON:
    required:
      - role
      - requires_bank_id
    properties:
      requires_bank_id:
        type: boolean
        example: 'true'
      role:
        type: string
        example: CanCreateBranch
  TransactionRequestTypeJSONV210:
    required:
      - transaction_request_type
    properties:
      transaction_request_type:
        type: string
        example: SandboxTan
  TransactionRequestTypesJSON:
    required:
      - transaction_request_types
    properties:
      transaction_request_types:
        type: array
        items:
          $ref: '#/definitions/TransactionRequestTypeJSONV210'
  TransactionRequestBodyCounterpartyJSON:
    required:
      - to
      - value
      - description
      - charge_policy
    properties:
      charge_policy:
        type: string
        example: SHARED
      description:
        type: string
        example: A description for the transaction to the counterparty
      value:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      to:
        $ref: '#/definitions/CounterpartyIdJson'
  TransactionRequestBodySEPAJSON:
    required:
      - value
      - to
      - description
      - charge_policy
    properties:
      charge_policy:
        type: string
        example: SHARED
      description:
        type: string
        example: This is a SEPA Transaction Request
      to:
        $ref: '#/definitions/IbanJson'
      value:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
  CustomerCreditRatingJSON:
    required:
      - rating
      - source
    properties:
      source:
        type: string
        example: OBP
      rating:
        type: string
        example: OBP
  CustomerJsonV210:
    required:
      - bank_id
      - customer_id
      - customer_number
      - legal_name
      - mobile_phone_number
      - email
      - face_image
      - date_of_birth
      - relationship_status
      - dependants
      - dob_of_dependants
      - highest_education_attained
      - employment_status
      - kyc_status
      - last_ok_date
    properties:
      customer_id:
        type: string
        example: '123'
      email:
        type: string
        example: contact@tesobe.com
      mobile_phone_number:
        type: string
        example: '123'
      customer_number:
        type: string
        example: '123'
      highest_education_attained:
        type: string
        example: '123'
      dob_of_dependants:
        type: array
        items:
          type: string
          format: date
      bank_id:
        type: string
        example: bankid1234
      date_of_birth:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      credit_rating:
        $ref: '#/definitions/CustomerCreditRatingJSON'
      last_ok_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      employment_status:
        type: string
        example: '123'
      legal_name:
        type: string
        example: legal_name
      credit_limit:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      face_image:
        $ref: '#/definitions/CustomerFaceImageJson'
      dependants:
        type: integer
        format: int32
        example: '123'
      relationship_status:
        type: string
        example: '123'
      kyc_status:
        type: boolean
        example: 'true'
  CustomerJSONs:
    required:
      - customers
    properties:
      customers:
        type: array
        items:
          $ref: '#/definitions/CustomerJsonV210'
  UserJSONV210:
    required:
      - id
      - provider
      - username
    properties:
      username:
        type: string
        example: OBP
      provider:
        type: string
        example: OBP
      id:
        type: string
        example: '123'
  LocationJsonV210:
    required:
      - latitude
      - longitude
      - date
      - user
    properties:
      user:
        $ref: '#/definitions/UserJSONV210'
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      longitude:
        type: number
        format: double
        example: '11.45'
      latitude:
        type: number
        format: double
        example: '11.45'
  PostCustomerJsonV210:
    required:
      - user_id
      - customer_number
      - legal_name
      - mobile_phone_number
      - email
      - face_image
      - date_of_birth
      - relationship_status
      - dependants
      - dob_of_dependants
      - credit_rating
      - credit_limit
      - highest_education_attained
      - employment_status
      - kyc_status
      - last_ok_date
    properties:
      email:
        type: string
        example: person@example.com
      mobile_phone_number:
        type: string
        example: +44 07972 444 876
      customer_number:
        type: string
        example: new customer number 687687678
      highest_education_attained:
        type: string
        example: Bachelor’s Degree
      user_id:
        type: string
        example: user_id to attach this customer to e.g. 123213
      dob_of_dependants:
        type: array
        items:
          type: string
          format: date
      date_of_birth:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      credit_rating:
        $ref: '#/definitions/CustomerCreditRatingJSON'
      last_ok_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      employment_status:
        type: string
        example: Employed
      legal_name:
        type: string
        example: NONE
      credit_limit:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      face_image:
        $ref: '#/definitions/CustomerFaceImageJson'
      dependants:
        type: integer
        format: int32
        example: '5'
      relationship_status:
        type: string
        example: Single
      kyc_status:
        type: boolean
        example: 'true'
  TransactionRequestWithChargeJSON210:
    required:
      - id
      - type
      - from
      - details
      - transaction_ids
      - status
      - start_date
      - end_date
      - challenge
      - charge
    properties:
      challenge:
        $ref: '#/definitions/ChallengeJsonV140'
      start_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      id:
        type: string
        example: 4050046c-63b3-4868-8a22-14b4181d33a6
      end_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      status:
        type: string
        example: COMPLETED
      from:
        $ref: '#/definitions/TransactionRequestAccountJsonV140'
      details:
        type: string
        example: ''
      charge:
        $ref: '#/definitions/TransactionRequestChargeJsonV200'
      type:
        type: string
        example: SANDBOX_TAN
      transaction_ids:
        type: array
        items:
          type: string
  TransactionRequestWithChargeJSONs210:
    required:
      - transaction_requests_with_charges
    properties:
      transaction_requests_with_charges:
        type: array
        items:
          $ref: '#/definitions/TransactionRequestWithChargeJSON210'
  AvailableRolesJSON:
    required:
      - roles
    properties:
      roles:
        type: array
        items:
          $ref: '#/definitions/AvailableRoleJSON'
  ConsumerJSON:
    required:
      - consumer_id
      - app_name
      - app_type
      - description
      - developer_email
      - redirect_url
      - created_by_user_id
      - created_by_user
      - enabled
      - created
    properties:
      created_by_user_id:
        type: string
        example: '123213'
      app_type:
        type: string
        example: Web
      description:
        type: string
        example: Account Management
      created_by_user:
        $ref: '#/definitions/ResourceUserJSON'
      enabled:
        type: boolean
        example: 'true'
      redirect_url:
        type: string
        example: www.openbankproject.com
      developer_email:
        type: string
        example: contact@tesobe.com
      consumer_id:
        type: integer
        format: int64
        example: '1213'
      app_name:
        type: string
        example: SOFI
      created:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
  ConsumersJson:
    required:
      - list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/ConsumerJSON'
  PutEnabledJSON:
    required:
      - enabled
    properties:
      enabled:
        type: boolean
        example: 'false'
  ProductJsonV210:
    required:
      - bank_id
      - code
      - name
      - category
      - family
      - super_family
      - more_info_url
      - details
      - description
      - meta
    properties:
      name:
        type: string
        example: product name
      description:
        type: string
        example: Description
      more_info_url:
        type: string
        example: www.example.com/prod1/more-info.html
      super_family:
        type: string
        example: super family
      code:
        type: string
        example: prod1
      bank_id:
        type: string
        example: bankid123
      meta:
        $ref: '#/definitions/MetaJsonV140'
      details:
        type: string
        example: Details
      category:
        type: string
        example: category
      family:
        type: string
        example: family
  ProductsJsonV210:
    required:
      - products
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/ProductJsonV210'
  PostCounterpartyBespoke:
    required:
      - key
      - value
    properties:
      value:
        type: string
        example: englishDescription
      key:
        type: string
        example: englishDescription
  PostCounterpartyJSON:
    required:
      - name
      - description
      - other_account_routing_scheme
      - other_account_routing_address
      - other_account_secondary_routing_scheme
      - other_account_secondary_routing_address
      - other_bank_routing_scheme
      - other_bank_routing_address
      - other_branch_routing_scheme
      - other_branch_routing_address
      - is_beneficiary
      - bespoke
    properties:
      other_account_routing_address:
        type: string
        example: 7987987-2348987-234234
      other_account_routing_scheme:
        type: string
        example: IBAN
      name:
        type: string
        example: CounterpartyName
      other_account_secondary_routing_address:
        type: string
        example: BIC201483
      is_beneficiary:
        type: boolean
        example: 'true'
      description:
        type: string
        example: My landlord
      other_branch_routing_address:
        type: string
        example: '10010'
      bespoke:
        type: array
        items:
          $ref: '#/definitions/PostCounterpartyBespoke'
      other_bank_routing_scheme:
        type: string
        example: bankCode
      other_branch_routing_scheme:
        type: string
        example: branchNumber
      other_bank_routing_address:
        type: string
        example: '10'
      other_account_secondary_routing_scheme:
        type: string
        example: accountNumber
  MetricsJson:
    required:
      - metrics
    properties:
      metrics:
        type: array
        items:
          $ref: '#/definitions/MetricJson'
  BranchJsonPutV210:
    required:
      - bank_id
      - name
      - address
      - location
      - meta
      - lobby
      - drive_up
    properties:
      name:
        type: string
        example: OBP
      location:
        $ref: '#/definitions/LocationJsonV140'
      drive_up:
        $ref: '#/definitions/DriveUpStringJson'
      bank_id:
        type: string
        example: gh.29.fi
      meta:
        $ref: '#/definitions/MetaJsonV140'
      lobby:
        $ref: '#/definitions/LobbyStringJson'
      address:
        $ref: '#/definitions/AddressJsonV140'
  BranchJsonPostV210:
    required:
      - id
      - bank_id
      - name
      - address
      - location
      - meta
      - lobby
      - drive_up
    properties:
      name:
        type: string
        example: OBP
      location:
        $ref: '#/definitions/LocationJsonV140'
      drive_up:
        $ref: '#/definitions/DriveUpStringJson'
      bank_id:
        type: string
        example: gh.29.fi
      id:
        type: string
        example: '123'
      meta:
        $ref: '#/definitions/MetaJsonV140'
      lobby:
        $ref: '#/definitions/LobbyStringJson'
      address:
        $ref: '#/definitions/AddressJsonV140'
  ConsumerRedirectUrlJSON:
    required:
      - redirect_url
    properties:
      redirect_url:
        type: string
        example: 'http://localhost:8888'
  ViewJSONV220:
    required:
      - id
      - short_name
      - description
      - is_public
      - alias
      - hide_metadata_if_alias_used
      - can_add_comment
      - can_add_corporate_location
      - can_add_image
      - can_add_image_url
      - can_add_more_info
      - can_add_open_corporates_url
      - can_add_physical_location
      - can_add_private_alias
      - can_add_public_alias
      - can_add_tag
      - can_add_url
      - can_add_where_tag
      - can_delete_comment
      - can_add_counterparty
      - can_delete_corporate_location
      - can_delete_image
      - can_delete_physical_location
      - can_delete_tag
      - can_delete_where_tag
      - can_edit_owner_comment
      - can_see_bank_account_balance
      - can_see_bank_account_bank_name
      - can_see_bank_account_currency
      - can_see_bank_account_iban
      - can_see_bank_account_label
      - can_see_bank_account_national_identifier
      - can_see_bank_account_number
      - can_see_bank_account_owners
      - can_see_bank_account_swift_bic
      - can_see_bank_account_type
      - can_see_comments
      - can_see_corporate_location
      - can_see_image_url
      - can_see_images
      - can_see_more_info
      - can_see_open_corporates_url
      - can_see_other_account_bank_name
      - can_see_other_account_iban
      - can_see_other_account_kind
      - can_see_other_account_metadata
      - can_see_other_account_national_identifier
      - can_see_other_account_number
      - can_see_other_account_swift_bic
      - can_see_owner_comment
      - can_see_physical_location
      - can_see_private_alias
      - can_see_public_alias
      - can_see_tags
      - can_see_transaction_amount
      - can_see_transaction_balance
      - can_see_transaction_currency
      - can_see_transaction_description
      - can_see_transaction_finish_date
      - can_see_transaction_metadata
      - can_see_transaction_other_bank_account
      - can_see_transaction_start_date
      - can_see_transaction_this_bank_account
      - can_see_transaction_type
      - can_see_url
      - can_see_where_tag
    properties:
      can_see_transaction_start_date:
        type: boolean
        example: 'true'
      can_add_url:
        type: boolean
        example: 'true'
      can_add_where_tag:
        type: boolean
        example: 'true'
      can_see_transaction_this_bank_account:
        type: boolean
        example: 'true'
      can_see_bank_account_owners:
        type: boolean
        example: 'true'
      can_see_private_alias:
        type: boolean
        example: 'true'
      can_edit_owner_comment:
        type: boolean
        example: 'true'
      can_see_other_account_national_identifier:
        type: boolean
        example: 'true'
      can_see_public_alias:
        type: boolean
        example: 'true'
      can_see_physical_location:
        type: boolean
        example: 'true'
      can_see_owner_comment:
        type: boolean
        example: 'true'
      can_see_bank_account_iban:
        type: boolean
        example: 'true'
      can_see_corporate_location:
        type: boolean
        example: 'true'
      can_see_bank_account_number:
        type: boolean
        example: 'true'
      can_see_other_account_bank_name:
        type: boolean
        example: 'true'
      description:
        type: string
        example: description
      can_see_transaction_other_bank_account:
        type: boolean
        example: 'true'
      can_delete_corporate_location:
        type: boolean
        example: 'true'
      can_see_comments:
        type: boolean
        example: 'true'
      can_see_bank_account_bank_name:
        type: boolean
        example: 'true'
      can_add_more_info:
        type: boolean
        example: 'true'
      can_see_other_account_number:
        type: boolean
        example: 'true'
      can_see_other_account_swift_bic:
        type: boolean
        example: 'true'
      can_add_open_corporates_url:
        type: boolean
        example: 'true'
      can_see_other_account_kind:
        type: boolean
        example: 'true'
      can_delete_physical_location:
        type: boolean
        example: 'true'
      can_see_bank_account_label:
        type: boolean
        example: 'true'
      can_see_transaction_currency:
        type: boolean
        example: 'true'
      is_public:
        type: boolean
        example: 'true'
      can_see_transaction_finish_date:
        type: boolean
        example: 'true'
      can_add_tag:
        type: boolean
        example: 'true'
      can_see_images:
        type: boolean
        example: 'true'
      can_see_bank_account_currency:
        type: boolean
        example: 'true'
      hide_metadata_if_alias_used:
        type: boolean
        example: 'true'
      can_delete_where_tag:
        type: boolean
        example: 'true'
      alias:
        type: string
        example: 'No'
      can_add_image_url:
        type: boolean
        example: 'true'
      can_add_comment:
        type: boolean
        example: 'true'
      can_see_image_url:
        type: boolean
        example: 'true'
      id:
        type: string
        example: '1234'
      can_see_bank_account_national_identifier:
        type: boolean
        example: 'true'
      can_add_counterparty:
        type: boolean
        example: 'true'
      can_see_tags:
        type: boolean
        example: 'true'
      can_see_open_corporates_url:
        type: boolean
        example: 'true'
      short_name:
        type: string
        example: short_name
      can_delete_tag:
        type: boolean
        example: 'true'
      can_see_more_info:
        type: boolean
        example: 'true'
      can_see_transaction_metadata:
        type: boolean
        example: 'true'
      can_delete_comment:
        type: boolean
        example: 'true'
      can_see_where_tag:
        type: boolean
        example: 'true'
      can_add_private_alias:
        type: boolean
        example: 'true'
      can_add_public_alias:
        type: boolean
        example: 'true'
      can_see_bank_account_swift_bic:
        type: boolean
        example: 'true'
      can_add_image:
        type: boolean
        example: 'true'
      can_see_transaction_type:
        type: boolean
        example: 'true'
      can_see_other_account_iban:
        type: boolean
        example: 'true'
      can_add_physical_location:
        type: boolean
        example: 'true'
      can_add_corporate_location:
        type: boolean
        example: 'true'
      can_delete_image:
        type: boolean
        example: 'true'
      can_see_url:
        type: boolean
        example: 'true'
      can_see_bank_account_balance:
        type: boolean
        example: 'true'
      can_see_transaction_balance:
        type: boolean
        example: 'true'
      can_see_transaction_amount:
        type: boolean
        example: 'true'
      can_see_other_account_metadata:
        type: boolean
        example: 'true'
      can_see_bank_account_type:
        type: boolean
        example: 'true'
      can_see_transaction_description:
        type: boolean
        example: 'true'
  ViewsJSONV220:
    required:
      - views
    properties:
      views:
        type: array
        items:
          $ref: '#/definitions/ViewJSONV220'
  FXRateJsonV220:
    required:
      - bank_id
      - from_currency_code
      - to_currency_code
      - conversion_value
      - inverse_conversion_value
      - effective_date
    properties:
      inverse_conversion_value:
        type: number
        format: double
        example: '1.0'
      to_currency_code:
        type: string
        example: USD
      effective_date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
      conversion_value:
        type: number
        format: double
        example: '1.0'
      bank_id:
        type: string
        example: bankid123
      from_currency_code:
        type: string
        example: EUR
  CounterpartyJsonV220:
    required:
      - name
      - description
      - created_by_user_id
      - this_bank_id
      - this_account_id
      - this_view_id
      - counterparty_id
      - other_bank_routing_scheme
      - other_bank_routing_address
      - other_branch_routing_scheme
      - other_branch_routing_address
      - other_account_routing_scheme
      - other_account_routing_address
      - other_account_secondary_routing_scheme
      - other_account_secondary_routing_address
      - is_beneficiary
      - bespoke
    properties:
      other_account_routing_address:
        type: string
        example: bankCode
      other_account_routing_scheme:
        type: string
        example: bankCode
      created_by_user_id:
        type: string
        example: 49e1e147-64c1-4823-ad9f-89efcd02a9fa
      name:
        type: string
        example: CounterpartyName
      other_account_secondary_routing_address:
        type: string
        example: bankCode
      is_beneficiary:
        type: boolean
        example: 'true'
      description:
        type: string
        example: My landlord
      other_branch_routing_address:
        type: string
        example: bankCode
      bespoke:
        type: array
        items:
          $ref: '#/definitions/PostCounterpartyBespoke'
      other_bank_routing_scheme:
        type: string
        example: bankCode
      other_branch_routing_scheme:
        type: string
        example: bankCode
      this_account_id:
        type: string
        example: 8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0
      this_view_id:
        type: string
        example: owner
      other_bank_routing_address:
        type: string
        example: bankCode
      this_bank_id:
        type: string
        example: gh.29.uk
      counterparty_id:
        type: string
        example: 1d65db7c-a7b2-4839-af41-958276ab7790
      other_account_secondary_routing_scheme:
        type: string
        example: bankCode
  CounterpartiesJsonV220:
    required:
      - counterparties
    properties:
      counterparties:
        type: array
        items:
          $ref: '#/definitions/CounterpartyJsonV220'
  BankJSONV220:
    required:
      - id
      - full_name
      - short_name
      - logo_url
      - website_url
      - swift_bic
      - national_identifier
      - bank_routing
    properties:
      national_identifier:
        type: string
        example: UK97ZZZ1234567890
      full_name:
        type: string
        example: uk
      swift_bic:
        type: string
        example: IIIGGB22
      logo_url:
        type: string
        example: 'https://static.openbankproject.com/images/sandbox/bank_x.png'
      id:
        type: string
        example: gh.29.uk.x
      short_name:
        type: string
        example: uk
      bank_routing:
        $ref: '#/definitions/BankRoutingJsonV121'
      website_url:
        type: string
        example: 'https://www.example.com'
  BranchJsonV220:
    required:
      - id
      - bank_id
      - name
      - address
      - location
      - meta
      - lobby
      - drive_up
      - branch_routing
    properties:
      name:
        type: string
        example: OBP
      location:
        $ref: '#/definitions/LocationJsonV140'
      branch_routing:
        $ref: '#/definitions/BranchRoutingJsonV141'
      drive_up:
        $ref: '#/definitions/DriveUpStringJson'
      bank_id:
        type: string
        example: gh.29.uk
      id:
        type: string
        example: '123'
      meta:
        $ref: '#/definitions/MetaJsonV140'
      lobby:
        $ref: '#/definitions/LobbyStringJson'
      address:
        $ref: '#/definitions/AddressJsonV140'
  AtmJsonV220:
    required:
      - id
      - bank_id
      - name
      - address
      - location
      - meta
    properties:
      name:
        type: string
        example: OBP
      location:
        $ref: '#/definitions/LocationJsonV140'
      bank_id:
        type: string
        example: gh.29.uk
      id:
        type: string
        example: '123'
      meta:
        $ref: '#/definitions/MetaJsonV140'
      address:
        $ref: '#/definitions/AddressJsonV140'
  ProductJsonV220:
    required:
      - bank_id
      - code
      - name
      - category
      - family
      - super_family
      - more_info_url
      - details
      - description
      - meta
    properties:
      name:
        type: string
        example: product name
      description:
        type: string
        example: Description
      more_info_url:
        type: string
        example: www.example.com/prod1/more-info.html
      super_family:
        type: string
        example: super family
      code:
        type: string
        example: prod1
      bank_id:
        type: string
        example: bankid123
      meta:
        $ref: '#/definitions/MetaJsonV140'
      details:
        type: string
        example: Details
      category:
        type: string
        example: category
      family:
        type: string
        example: family
  CreateAccountJSONV220:
    required:
      - user_id
      - label
      - type
      - balance
      - branch_id
      - account_routing
    properties:
      account_routing:
        $ref: '#/definitions/AccountRoutingJsonV121'
      branch_id:
        type: string
        example: '1234'
      label:
        type: string
        example: Label
      balance:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      user_id:
        type: string
        example: 66214b8e-259e-44ad-8868-3eb47be70646
      type:
        type: string
        example: CURRENT
  CachedFunctionJSON:
    required:
      - function_name
      - ttl_in_seconds
    properties:
      ttl_in_seconds:
        type: integer
        format: int32
        example: '5'
      function_name:
        type: string
        example: getBanks
  PortJSON:
    required:
      - property
      - value
    properties:
      value:
        type: string
        example: '8080'
      property:
        type: string
        example: default
  AkkaJSON:
    required:
      - ports
      - log_level
    properties:
      log_level:
        type: string
        example: Debug
      ports:
        type: array
        items:
          $ref: '#/definitions/PortJSON'
  MetricsJSON:
    required:
      - property
      - value
    properties:
      value:
        type: string
        example: Mapper
      property:
        type: string
        example: String
  WarehouseJSON:
    required:
      - property
      - value
    properties:
      value:
        type: string
        example: ElasticSearch
      property:
        type: string
        example: String
  ElasticSearchJSON:
    required:
      - metrics
      - warehouse
    properties:
      warehouse:
        type: array
        items:
          $ref: '#/definitions/WarehouseJSON'
      metrics:
        type: array
        items:
          $ref: '#/definitions/MetricsJSON'
  ConfigurationJSON:
    required:
      - akka
      - elastic_search
      - cache
    properties:
      cache:
        type: array
        items:
          $ref: '#/definitions/CachedFunctionJSON'
      elastic_search:
        $ref: '#/definitions/ElasticSearchJSON'
      akka:
        $ref: '#/definitions/AkkaJSON'
  ConnectorMetricJson:
    required:
      - connector_name
      - function_name
      - correlation_id
      - date
      - duration
    properties:
      connector_name:
        type: string
        example: mapper
      duration:
        type: integer
        format: int64
        example: '1000'
      function_name:
        type: string
        example: getBanks
      correlation_id:
        type: string
        example: '12345'
      date:
        type: string
        format: date
        example: 'Tue Jan 22 00:08:00 UTC 2013'
  ConnectorMetricsJson:
    required:
      - metrics
    properties:
      metrics:
        type: array
        items:
          $ref: '#/definitions/ConnectorMetricJson'
  ViewJsonV300:
    required:
      - id
      - short_name
      - description
      - is_public
      - alias
      - hide_metadata_if_alias_used
      - can_add_comment
      - can_add_corporate_location
      - can_add_image
      - can_add_image_url
      - can_add_more_info
      - can_add_open_corporates_url
      - can_add_physical_location
      - can_add_private_alias
      - can_add_public_alias
      - can_add_tag
      - can_add_url
      - can_add_where_tag
      - can_delete_comment
      - can_add_counterparty
      - can_delete_corporate_location
      - can_delete_image
      - can_delete_physical_location
      - can_delete_tag
      - can_delete_where_tag
      - can_edit_owner_comment
      - can_see_bank_account_balance
      - can_see_bank_account_bank_name
      - can_see_bank_account_currency
      - can_see_bank_account_iban
      - can_see_bank_account_label
      - can_see_bank_account_national_identifier
      - can_see_bank_account_number
      - can_see_bank_account_owners
      - can_see_bank_account_swift_bic
      - can_see_bank_account_type
      - can_see_comments
      - can_see_corporate_location
      - can_see_image_url
      - can_see_images
      - can_see_more_info
      - can_see_open_corporates_url
      - can_see_other_account_bank_name
      - can_see_other_account_iban
      - can_see_other_account_kind
      - can_see_other_account_metadata
      - can_see_other_account_national_identifier
      - can_see_other_account_number
      - can_see_other_account_swift_bic
      - can_see_owner_comment
      - can_see_physical_location
      - can_see_private_alias
      - can_see_public_alias
      - can_see_tags
      - can_see_transaction_amount
      - can_see_transaction_balance
      - can_see_transaction_currency
      - can_see_transaction_description
      - can_see_transaction_finish_date
      - can_see_transaction_metadata
      - can_see_transaction_other_bank_account
      - can_see_transaction_start_date
      - can_see_transaction_this_bank_account
      - can_see_transaction_type
      - can_see_url
      - can_see_where_tag
      - can_see_bank_routing_scheme
      - can_see_bank_routing_address
      - can_see_bank_account_routing_scheme
      - can_see_bank_account_routing_address
      - can_see_other_bank_routing_scheme
      - can_see_other_bank_routing_address
      - can_see_other_account_routing_scheme
      - can_see_other_account_routing_address
      - can_add_transaction_request_to_own_account
      - can_add_transaction_request_to_any_account
      - can_see_bank_account_credit_limit
    properties:
      can_see_transaction_start_date:
        type: boolean
        example: 'true'
      can_add_url:
        type: boolean
        example: 'true'
      can_add_where_tag:
        type: boolean
        example: 'true'
      can_see_transaction_this_bank_account:
        type: boolean
        example: 'true'
      can_see_bank_account_owners:
        type: boolean
        example: 'true'
      can_see_bank_routing_address:
        type: boolean
        example: 'true'
      can_see_private_alias:
        type: boolean
        example: 'true'
      can_edit_owner_comment:
        type: boolean
        example: 'true'
      can_see_other_account_national_identifier:
        type: boolean
        example: 'true'
      can_see_bank_routing_scheme:
        type: boolean
        example: 'true'
      can_see_public_alias:
        type: boolean
        example: 'true'
      can_see_physical_location:
        type: boolean
        example: 'true'
      can_see_owner_comment:
        type: boolean
        example: 'true'
      can_see_bank_account_iban:
        type: boolean
        example: 'true'
      can_see_corporate_location:
        type: boolean
        example: 'true'
      can_see_bank_account_number:
        type: boolean
        example: 'true'
      can_see_other_account_bank_name:
        type: boolean
        example: 'true'
      description:
        type: string
        example: description
      can_see_bank_account_routing_scheme:
        type: boolean
        example: 'true'
      can_see_transaction_other_bank_account:
        type: boolean
        example: 'true'
      can_delete_corporate_location:
        type: boolean
        example: 'true'
      can_see_comments:
        type: boolean
        example: 'true'
      can_see_bank_account_bank_name:
        type: boolean
        example: 'true'
      can_add_more_info:
        type: boolean
        example: 'true'
      can_see_other_account_number:
        type: boolean
        example: 'true'
      can_see_other_account_swift_bic:
        type: boolean
        example: 'true'
      can_add_open_corporates_url:
        type: boolean
        example: 'true'
      can_see_other_account_kind:
        type: boolean
        example: 'true'
      can_add_transaction_request_to_own_account:
        type: boolean
        example: 'true'
      can_delete_physical_location:
        type: boolean
        example: 'true'
      can_see_bank_account_label:
        type: boolean
        example: 'true'
      can_see_transaction_currency:
        type: boolean
        example: 'true'
      is_public:
        type: boolean
        example: 'true'
      can_see_transaction_finish_date:
        type: boolean
        example: 'true'
      can_see_bank_account_routing_address:
        type: boolean
        example: 'true'
      can_add_tag:
        type: boolean
        example: 'true'
      can_see_images:
        type: boolean
        example: 'true'
      can_see_bank_account_credit_limit:
        type: boolean
        example: 'true'
      can_see_bank_account_currency:
        type: boolean
        example: 'true'
      hide_metadata_if_alias_used:
        type: boolean
        example: 'true'
      can_delete_where_tag:
        type: boolean
        example: 'true'
      alias:
        type: string
        example: 'No'
      can_add_image_url:
        type: boolean
        example: 'true'
      can_add_comment:
        type: boolean
        example: 'true'
      can_see_image_url:
        type: boolean
        example: 'true'
      id:
        type: string
        example: '1234'
      can_see_bank_account_national_identifier:
        type: boolean
        example: 'true'
      can_add_counterparty:
        type: boolean
        example: 'true'
      can_add_transaction_request_to_any_account:
        type: boolean
        example: 'true'
      can_see_tags:
        type: boolean
        example: 'true'
      can_see_open_corporates_url:
        type: boolean
        example: 'true'
      short_name:
        type: string
        example: short_name
      can_delete_tag:
        type: boolean
        example: 'true'
      can_see_other_account_routing_scheme:
        type: boolean
        example: 'true'
      can_see_more_info:
        type: boolean
        example: 'true'
      can_see_transaction_metadata:
        type: boolean
        example: 'true'
      can_delete_comment:
        type: boolean
        example: 'true'
      can_see_where_tag:
        type: boolean
        example: 'true'
      can_add_private_alias:
        type: boolean
        example: 'true'
      can_add_public_alias:
        type: boolean
        example: 'true'
      can_see_bank_account_swift_bic:
        type: boolean
        example: 'true'
      can_add_image:
        type: boolean
        example: 'true'
      can_see_transaction_type:
        type: boolean
        example: 'true'
      can_see_other_account_routing_address:
        type: boolean
        example: 'true'
      can_see_other_account_iban:
        type: boolean
        example: 'true'
      can_add_physical_location:
        type: boolean
        example: 'true'
      can_add_corporate_location:
        type: boolean
        example: 'true'
      can_delete_image:
        type: boolean
        example: 'true'
      can_see_url:
        type: boolean
        example: 'true'
      can_see_bank_account_balance:
        type: boolean
        example: 'true'
      can_see_other_bank_routing_address:
        type: boolean
        example: 'true'
      can_see_transaction_balance:
        type: boolean
        example: 'true'
      can_see_transaction_amount:
        type: boolean
        example: 'true'
      can_see_other_account_metadata:
        type: boolean
        example: 'true'
      can_see_bank_account_type:
        type: boolean
        example: 'true'
      can_see_other_bank_routing_scheme:
        type: boolean
        example: 'true'
      can_see_transaction_description:
        type: boolean
        example: 'true'
  ViewsJsonV300:
    required:
      - views
    properties:
      views:
        type: array
        items:
          $ref: '#/definitions/ViewJsonV300'
  CoreAccountJsonV300:
    required:
      - id
      - label
      - bank_id
      - account_routing
    properties:
      account_routing:
        $ref: '#/definitions/AccountRoutingJsonV121'
      bank_id:
        type: string
        example: String
      label:
        type: string
        example: String
      id:
        type: string
        example: String
  CoreAccountsJsonV300:
    required:
      - accounts
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/CoreAccount'
  AccountIdJson:
    required:
      - id
    properties:
      id:
        type: string
        example: String
  AccountsIdsJsonV300:
    required:
      - accounts
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/AccountIdJson'
  AdapterInfoJsonV300:
    required:
      - name
      - version
      - git_commit
      - date
    properties:
      date:
        type: string
        example: String
      git_commit:
        type: string
        example: String
      version:
        type: string
        example: String
      name:
        type: string
        example: String
  ThisAccountJsonV300:
    required:
      - id
      - bank_routing
      - account_routing
      - holders
      - kind
    properties:
      account_routing:
        $ref: '#/definitions/AccountRoutingJsonV121'
      id:
        type: string
        example: String
      holders:
        type: array
        items:
          $ref: '#/definitions/AccountHolderJSON'
      bank_routing:
        $ref: '#/definitions/BankRoutingJsonV121'
      kind:
        type: string
        example: String
  OtherAccountJsonV300:
    required:
      - id
      - bank_routing
      - account_routing
      - kind
      - metadata
    properties:
      account_routing:
        $ref: '#/definitions/AccountRoutingJsonV121'
      id:
        type: string
        example: String
      metadata:
        $ref: '#/definitions/OtherAccountMetadataJSON'
      bank_routing:
        $ref: '#/definitions/BankRoutingJsonV121'
      kind:
        type: string
        example: String
  OtherAccountsJsonV300:
    required:
      - other_accounts
    properties:
      other_accounts:
        type: array
        items:
          $ref: '#/definitions/OtherAccountJsonV300'
  TransactionJsonV300:
    required:
      - id
      - this_account
      - other_account
      - details
      - metadata
    properties:
      this_account:
        $ref: '#/definitions/ThisAccountJsonV300'
      id:
        type: string
        example: String
      details:
        $ref: '#/definitions/TransactionDetailsJSON'
      metadata:
        $ref: '#/definitions/TransactionMetadataJSON'
      other_account:
        $ref: '#/definitions/OtherAccountJsonV300'
  TransactionsJsonV300:
    required:
      - transactions
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/TransactionJsonV300'
  CoreCounterpartyJsonV300:
    required:
      - id
      - bank_routing
      - account_routing
      - kind
    properties:
      kind:
        type: string
        example: String
      account_routing:
        $ref: '#/definitions/AccountRoutingJsonV121'
      bank_routing:
        $ref: '#/definitions/BankRoutingJsonV121'
      id:
        type: string
        example: String
  CoreTransactionJsonV300:
    required:
      - id
      - account
      - counterparty
      - details
    properties:
      details:
        $ref: '#/definitions/CoreTransactionDetailsJSON'
      counterparty:
        $ref: '#/definitions/CoreCounterpartyJsonV300'
      account:
        $ref: '#/definitions/ThisAccountJsonV300'
      id:
        type: string
        example: String
  CoreCounterpartiesJsonV300:
    required:
      - counterparties
    properties:
      counterparties:
        type: array
        items:
          $ref: '#/definitions/CoreCounterpartyJsonV300'
  CoreTransactionsJsonV300:
    required:
      - transactions
    properties:
      transactions:
        type: array
        items:
          $ref: '#/definitions/CoreTransactionJsonV300'
  ModeratedAccountJsonV300:
    required:
      - id
      - bank_id
      - label
      - number
      - owners
      - type
      - balance
      - views_available
      - account_routing
    properties:
      number:
        type: string
        example: String
      account_routing:
        $ref: '#/definitions/AccountRoutingJsonV121'
      views_available:
        type: array
        items:
          $ref: '#/definitions/ViewJsonV300'
      label:
        type: string
        example: String
      owners:
        type: array
        items:
          $ref: '#/definitions/UserJSONV121'
      balance:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      bank_id:
        type: string
        example: String
      id:
        type: string
        example: String
      type:
        type: string
        example: String
  ModeratedCoreAccountJsonV300:
    required:
      - id
      - bank_id
      - label
      - number
      - owners
      - type
      - balance
      - account_routing
      - account_rules
    properties:
      number:
        type: string
        example: String
      account_routing:
        $ref: '#/definitions/AccountRoutingJsonV121'
      label:
        type: string
        example: String
      owners:
        type: array
        items:
          $ref: '#/definitions/UserJSONV121'
      balance:
        $ref: '#/definitions/AmountOfMoneyJsonV121'
      bank_id:
        type: string
        example: String
      id:
        type: string
        example: String
      type:
        type: string
        example: String
      account_rules:
        type: array
        items:
          $ref: '#/definitions/AccountRuleJsonV300'
  NoSupportYet:
    properties: {}
